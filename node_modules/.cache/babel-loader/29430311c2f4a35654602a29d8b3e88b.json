{"ast":null,"code":"var _jsxFileName = \"/Volumes/Nana/I_T/projects_code/react/scandiweb_task/src/components/Product.js\";\nimport React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { Query } from 'react-apollo';\nimport { gql } from 'graphql-tag';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PRODUCT_QUERY = gql`\n    query productQuery($id: String!){ \n        products(id: $id){\n            inStock\n            name\n            id\n            brand\n            description\n            gallery\n          }\n      }\n`;\nexport class Product extends Component {\n  render() {\n    const {\n      id\n    } = this.props.match.params;\n    return /*#__PURE__*/_jsxDEV(Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Query, {\n        query: PRODUCT_QUERY,\n        variables: {\n          id\n        },\n        children: _ref => {\n          let {\n            loading,\n            data,\n            error\n          } = _ref;\n          if (loading) return /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Loading...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 38\n          }, this);\n          if (error) console.log(error);\n          console.log(data);\n          return /*#__PURE__*/_jsxDEV(Wrap, {\n            children: /*#__PURE__*/_jsxDEV(\"h1\", {\n              children: \"Welcome to product by Id \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 26\n          }, this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this);\n  }\n\n}\nProduct.propTypes = {};\nexport default Product;\nconst Wrap = styled.div`\n\n`;\n_c = Wrap;\n\nvar _c;\n\n$RefreshReg$(_c, \"Wrap\");","map":{"version":3,"sources":["/Volumes/Nana/I_T/projects_code/react/scandiweb_task/src/components/Product.js"],"names":["React","Component","Fragment","PropTypes","Query","gql","styled","PRODUCT_QUERY","Product","render","id","props","match","params","loading","data","error","console","log","propTypes","Wrap","div"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,KAAT,QAAsB,cAAtB;AACA,SAASC,GAAT,QAAoB,aAApB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;;AAEA,MAAMC,aAAa,GAAGF,GAAI;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAXA;AAaA,OAAO,MAAMG,OAAN,SAAsBP,SAAtB,CAAgC;AAIrCQ,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA;AAAF,QAAS,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,MAAhC;AAEA,wBACE,QAAC,QAAD;AAAA,6BACE,QAAC,KAAD;AAAO,QAAA,KAAK,EAAEN,aAAd;AAA6B,QAAA,SAAS,EAAE;AAACG,UAAAA;AAAD,SAAxC;AAAA,kBAEM,QAA0B;AAAA,cAAzB;AAACI,YAAAA,OAAD;AAAUC,YAAAA,IAAV;AAAgBC,YAAAA;AAAhB,WAAyB;AACtB,cAAGF,OAAH,EAAY,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP;AACZ,cAAGE,KAAH,EAAUC,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACVC,UAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AAEA,8BAAO,QAAC,IAAD;AAAA,mCACL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADK;AAAA;AAAA;AAAA;AAAA,kBAAP;AAGH;AAVP;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAiBD;;AAxBoC;AAA1BP,O,CACJW,S,GAAY,E;AA0BrB,eAAeX,OAAf;AAEA,MAAMY,IAAI,GAAGd,MAAM,CAACe,GAAI;AACxB;AACA,CAFA;KAAMD,I","sourcesContent":["import React, { Component, Fragment } from 'react'\nimport PropTypes from 'prop-types'\nimport { Query } from 'react-apollo'\nimport { gql } from 'graphql-tag'\nimport styled from 'styled-components';\n\nconst PRODUCT_QUERY = gql`\n    query productQuery($id: String!){ \n        products(id: $id){\n            inStock\n            name\n            id\n            brand\n            description\n            gallery\n          }\n      }\n`\n\nexport class Product extends Component {\n  static propTypes = {\n  }\n\n  render() {\n    const { id } = this.props.match.params\n\n    return (\n      <Fragment>\n        <Query query={PRODUCT_QUERY} variables={{id}}> \n          {\n              ({loading, data, error})=>{\n                  if(loading) return <h1>Loading...</h1>\n                  if(error) console.log(error)\n                  console.log(data)\n\n                  return <Wrap>\n                    <h1>Welcome to product by Id </h1>\n                  </Wrap>\n              }\n          }\n        </Query>\n      </Fragment>\n    )\n  }\n}\n\nexport default Product\n\nconst Wrap = styled.div`\n\n`"]},"metadata":{},"sourceType":"module"}