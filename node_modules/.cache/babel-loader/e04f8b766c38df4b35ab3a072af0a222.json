{"ast":null,"code":"var _jsxFileName = \"/Volumes/Nana/I_T/projects_code/react/scandiweb_task/src/components/Product.js\";\nimport React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { Query } from 'react-apollo';\nimport { gql } from 'graphql-tag';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PRODUCT_QUERY = gql`\n    query productQuery($id: String!){ \n        product(id: $id){\n            inStock\n            name\n            id\n            brand\n            description\n            gallery\n            attributes{\n                id\n                items{\n                    value\n                    displayValue\n                    id\n                }\n            }\n            prices{\n                amount\n                currency{\n                    label\n                    symbol\n                }\n            }\n      }\n    }\n`;\nexport class Product extends Component {\n  componentDidMount() {\n    this.setState({\n      mounted: true\n    });\n  }\n\n  render() {\n    let {\n      id\n    } = this.props.match.params;\n    return /*#__PURE__*/_jsxDEV(Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Query, {\n        query: PRODUCT_QUERY,\n        variables: {\n          id\n        },\n        children: _ref => {\n          let {\n            loading,\n            data,\n            error\n          } = _ref;\n          if (loading) return /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Loading...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 38\n          }, this);\n          if (error) console.log(error);\n          const {\n            id,\n            gallery,\n            name,\n            brand,\n            description,\n            inStock\n          } = data.product;\n          const {\n            items: {\n              dispalValue\n            }\n          } = data.product.attributes.items;\n          console.log(displayValue); // const {currency: {label, symbol}, amount} } = data.product.prices\n\n          return /*#__PURE__*/_jsxDEV(Wrapper, {\n            children: [/*#__PURE__*/_jsxDEV(ProductImg, {\n              children: /*#__PURE__*/_jsxDEV(Image_, {\n                src: gallery[0],\n                alt: \"\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 22\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(ProductInfo, {\n              children: [/*#__PURE__*/_jsxDEV(Brand, {\n                children: [brand, \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(Name, {\n                children: name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(AttributesContainer, {\n                children: /*#__PURE__*/_jsxDEV(Price, {\n                  children: [/*#__PURE__*/_jsxDEV(AttributeType, {\n                    children: \"PRICE:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 88,\n                    columnNumber: 31\n                  }, this), /*#__PURE__*/_jsxDEV(AttributeType, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 89,\n                    columnNumber: 31\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 87,\n                  columnNumber: 27\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                children: \"ADD TO CART \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(ProductDescription, {\n                children: description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 26\n          }, this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this);\n  }\n\n}\nProduct.propTypes = {};\nexport default Product;\nconst Container = styled.div`\n  \n`;\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n_c = Wrapper;\nconst ProductImg = styled.div`\n  box-sizing: border-box;\n  flex: 2;\n  margin-left: 50px;\n  margin-top: 100px;\n  justify-content: flex-end;\n   `;\n_c2 = ProductImg;\nconst Image_ = styled.img`\n  display: flex;\n  \n  max-height: 50%;\n  border: 0.5px ;\n  widht: 500px;\n  height: 500px;\n   `;\n_c3 = Image_;\nconst ProductInfo = styled.div`\n  margin-top: 120px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  flex:1;\n  margin-right: 50px;\n`;\n_c4 = ProductInfo;\nconst Brand = styled.span`\n  font-weight: 400;\n  font-size: 30px;\n  line-height: 27px;\n  margin-top: 15px;\n  margin-bottom: 15px;\n`;\n_c5 = Brand;\nconst Name = styled.span`\n  line-height: 27px;\n  width: 192;\n  display: flex;\n  align-items: center;\n  font-weight: 250;\n  font-size: 30px;\n  font-style: normal;\n  color: #1D1F22;\n`;\n_c6 = Name;\nconst AttributesContainer = styled.div`\n  margin-top:20px;\n`;\n_c7 = AttributesContainer;\nconst AttributeType = styled.span`\n  font-weight: 700;\n  margin-bottom: 10px;\n  \n`;\n_c8 = AttributeType;\nconst AttributeItems = styled.div`\n  margin-top: 10px;\n  margin-bottom: 25px;\n  display: flex;\n  \n`;\nconst Price = styled.span`\n  display: flex;\n  flex-direction: column;\n  \n`;\n_c9 = Price;\nconst Button = styled.div`\n  font-weight: 600;\n  color: white;\n  background-color: #5ECE7B;\n  height: 40px;\n  width: 250px;\n  display: flex;\n  justify-content: center;\n  border-radius: 3px; \n  opacity: 0.85;\n  font-size: 13px;\n  cursor: pointer;\n  margin-top: 20px;\n  align-items: center;  \n`;\n_c10 = Button;\nconst ProductDescription = styled.div`\n  width: 256px;\n  display: flex;\n  flex-wrap: wrap; \n  font-size: 16px;\n  margin-top: 5px;\n`;\n_c11 = ProductDescription;\nconst SizeContainer = styled.div`\n  max-width: 63px;\n  max-height: 45px; \n  border: 1px solid #A6A6A6;\n  display: flex;\n  justify-content: center;\n  padding: 8px;\n  box-sizing: border-box;\n  margin: 6px;\n  margin-left: 0;\n`;\nconst Size = styled.div`\n  font-size: 13px;\n  padding: 10px;\n  display: flex;\n  align-items: center;\n`;\nconst ColorContainer = styled.div`\n\n`;\nconst Color = styled.div`\n\n`;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11;\n\n$RefreshReg$(_c, \"Wrapper\");\n$RefreshReg$(_c2, \"ProductImg\");\n$RefreshReg$(_c3, \"Image_\");\n$RefreshReg$(_c4, \"ProductInfo\");\n$RefreshReg$(_c5, \"Brand\");\n$RefreshReg$(_c6, \"Name\");\n$RefreshReg$(_c7, \"AttributesContainer\");\n$RefreshReg$(_c8, \"AttributeType\");\n$RefreshReg$(_c9, \"Price\");\n$RefreshReg$(_c10, \"Button\");\n$RefreshReg$(_c11, \"ProductDescription\");","map":{"version":3,"sources":["/Volumes/Nana/I_T/projects_code/react/scandiweb_task/src/components/Product.js"],"names":["React","Component","Fragment","PropTypes","Query","gql","styled","PRODUCT_QUERY","Product","componentDidMount","setState","mounted","render","id","props","match","params","loading","data","error","console","log","gallery","name","brand","description","inStock","product","items","dispalValue","attributes","displayValue","propTypes","Container","div","Wrapper","ProductImg","Image_","img","ProductInfo","Brand","span","Name","AttributesContainer","AttributeType","AttributeItems","Price","Button","ProductDescription","SizeContainer","Size","ColorContainer","Color"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from 'react'\nimport PropTypes from 'prop-types'\nimport { Query } from 'react-apollo'\nimport { gql } from 'graphql-tag'\nimport styled from 'styled-components';\n\nconst PRODUCT_QUERY = gql`\n    query productQuery($id: String!){ \n        product(id: $id){\n            inStock\n            name\n            id\n            brand\n            description\n            gallery\n            attributes{\n                id\n                items{\n                    value\n                    displayValue\n                    id\n                }\n            }\n            prices{\n                amount\n                currency{\n                    label\n                    symbol\n                }\n            }\n      }\n    }\n`\n\nexport class Product extends Component {\n  static propTypes = {}\n\n  componentDidMount () {\n    this.setState({ mounted: true })\n  }\n\n  render() {\n    let { id } = this.props.match.params\n    \n    return (\n      <Fragment>\n        <Query query={PRODUCT_QUERY} variables={{id}}> \n          {\n              ({loading, data, error})=>{\n                  if(loading) return <h1>Loading...</h1>\n                  if(error) console.log(error)\n                \n                  const { id, gallery, name, brand, description, inStock } = data.product \n                  const { items:{dispalValue} } = data.product.attributes.items \n                  console.log(displayValue)   \n                  // const {currency: {label, symbol}, amount} } = data.product.prices\n                  return <Wrapper>\n                    <ProductImg>\n                     <Image_ src={gallery[0]} alt=\"\"/>\n                    </ProductImg>\n                    <ProductInfo>\n                      <Brand>{brand} </Brand>\n                      <Name>{name}</Name>\n                      <AttributesContainer>\n                      {/* <AttributeType>SIZE:</AttributeType>\n                      <AttributeItems> */}\n                          {/* <SizeContainer> */}\n                        \n                        {/* {\n                        data.items.map(item =>(<></>))\n                        } */}\n\n                        {/* <Size></Size>\n                            </SizeContainer>\n                            <SizeContainer>\n                            <Size>XS</Size>\n                            </SizeContainer> \n                            <SizeContainer>\n                            <Size>XS</Size>\n                            </SizeContainer> \n                            <SizeContainer>\n                            <Size>XS</Size>\n                            </SizeContainer>   \n                        </AttributeItems>\n                        <AttributeType>COLOR: </AttributeType>\n                        <AttributeItems>4,6,9,2</AttributeItems> */}\n                          <Price>\n                              <AttributeType>PRICE:</AttributeType>\n                              <AttributeType> \n                                  {/* {symbol} {amount} */}\n                              </AttributeType>\n                          </Price>\n\n                        </AttributesContainer>\n\n                        <Button>ADD TO CART </Button>\n                        <ProductDescription>{description}</ProductDescription>\n                    </ProductInfo>\n                  </Wrapper>\n              }\n          }\n        </Query>\n      </Fragment>\n    )\n  }\n}\n\nexport default Product\n\nconst Container = styled.div`\n  \n`\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`\nconst ProductImg = styled.div`\n  box-sizing: border-box;\n  flex: 2;\n  margin-left: 50px;\n  margin-top: 100px;\n  justify-content: flex-end;\n   `\nconst Image_ = styled.img`\n  display: flex;\n  \n  max-height: 50%;\n  border: 0.5px ;\n  widht: 500px;\n  height: 500px;\n   `\nconst ProductInfo = styled.div`\n  margin-top: 120px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  flex:1;\n  margin-right: 50px;\n`\nconst Brand = styled.span`\n  font-weight: 400;\n  font-size: 30px;\n  line-height: 27px;\n  margin-top: 15px;\n  margin-bottom: 15px;\n`\nconst Name = styled.span`\n  line-height: 27px;\n  width: 192;\n  display: flex;\n  align-items: center;\n  font-weight: 250;\n  font-size: 30px;\n  font-style: normal;\n  color: #1D1F22;\n`\nconst AttributesContainer = styled.div`\n  margin-top:20px;\n`\nconst AttributeType = styled.span`\n  font-weight: 700;\n  margin-bottom: 10px;\n  \n`\nconst AttributeItems = styled.div`\n  margin-top: 10px;\n  margin-bottom: 25px;\n  display: flex;\n  \n`\nconst Price = styled.span`\n  display: flex;\n  flex-direction: column;\n  \n`\nconst Button = styled.div`\n  font-weight: 600;\n  color: white;\n  background-color: #5ECE7B;\n  height: 40px;\n  width: 250px;\n  display: flex;\n  justify-content: center;\n  border-radius: 3px; \n  opacity: 0.85;\n  font-size: 13px;\n  cursor: pointer;\n  margin-top: 20px;\n  align-items: center;  \n`\nconst ProductDescription = styled.div`\n  width: 256px;\n  display: flex;\n  flex-wrap: wrap; \n  font-size: 16px;\n  margin-top: 5px;\n`\nconst SizeContainer = styled.div`\n  max-width: 63px;\n  max-height: 45px; \n  border: 1px solid #A6A6A6;\n  display: flex;\n  justify-content: center;\n  padding: 8px;\n  box-sizing: border-box;\n  margin: 6px;\n  margin-left: 0;\n`\nconst Size = styled.div`\n  font-size: 13px;\n  padding: 10px;\n  display: flex;\n  align-items: center;\n`\nconst ColorContainer = styled.div`\n\n`\nconst Color = styled.div`\n\n`"]},"metadata":{},"sourceType":"module"}