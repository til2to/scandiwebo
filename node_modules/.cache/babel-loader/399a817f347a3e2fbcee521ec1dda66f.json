{"ast":null,"code":"var _jsxFileName = \"/Volumes/Nana/I_T/projects_code/react/scandiweb_task/src/components/Categories.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { CategoryItem } from './CategoryItem';\nimport { Query } from 'react-apollo';\nimport { gql } from 'graphql-tag';\nimport CategoryName from './CategoryName';\nimport Navbar from './Navbar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Categories extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      categories: []\n    };\n  }\n\n  getCategories(data) {\n    thsi.setState({\n      categories: data\n    });\n  }\n\n  // filterClothes = (cat) => {\n  //   const results = this.data.categories.filter((catItem) => {\n  //     return catItem.name === catItem.name\n  //     console.log(catItem[0].name)\n  //   })\n  //   this.setState({clothes_data: results})\n  // }\n  render() {\n    const CATEGORIES_QUERY = gql`\n    query categoriesQuery{ \n        categories{\n          name\n          products{\n            name\n            brand\n            id\n            gallery\n            description\n            inStock\n            category\n          }\n        }\n    }\n`;\n    return /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(Query, {\n        query: CATEGORIES_QUERY,\n        onCompleted: this.getCategories(),\n        children: _ref => {\n          let {\n            data,\n            loading,\n            error\n          } = _ref;\n          if (loading) return /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"loading in categories\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 35\n          }, this);\n          if (error) console.log(error.message);\n          return /*#__PURE__*/_jsxDEV(Wrap, {\n            children: data.categories.map(catItem => /*#__PURE__*/_jsxDEV(CategoryItem, {\n              catItem: catItem\n            }, catItem.name, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 22\n          }, this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nCategories.propTypes = {};\nexport default Categories;\nconst Container = styled.div`\n  // display: flex;\n`;\n_c = Container;\nconst Wrap = styled.div`\n   display: flex;\n   flex-direction: column;\n`;\n_c2 = Wrap;\nconst Button = styled.div`\n  font-weight: 600;\n  color: white;\n  background-color: #5ECE7B;\n  height: 40px;\n  width: 250px;\n  display: flex;\n  justify-content: center;\n  border-radius: 3px; \n  opacity: 0.85;\n  font-size: 13px;\n  cursor: pointer;\n  margin-top: 20px;\n  align-items: center;  \n  `;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"Wrap\");","map":{"version":3,"sources":["/Volumes/Nana/I_T/projects_code/react/scandiweb_task/src/components/Categories.js"],"names":["React","Component","PropTypes","styled","CategoryItem","Query","gql","CategoryName","Navbar","Categories","constructor","props","state","categories","getCategories","data","thsi","setState","render","CATEGORIES_QUERY","loading","error","console","log","message","map","catItem","name","propTypes","Container","div","Wrap","Button"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,YAAT,QAA6B,gBAA7B;AACA,SAASC,KAAT,QAAsB,cAAtB;AACA,SAASC,GAAT,QAAoB,aAApB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,MAAP,MAAmB,UAAnB;;;AAGA,MAAMC,UAAN,SAAyBR,SAAzB,CAAmC;AACjCS,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,UAAU,EAAE;AADD,KAAb;AAGD;;AAEDC,EAAAA,aAAa,CAACC,IAAD,EAAM;AACjBC,IAAAA,IAAI,CAACC,QAAL,CAAc;AAACJ,MAAAA,UAAU,EAAEE;AAAb,KAAd;AACD;;AAGD;AACA;AACA;AACA;AACA;AACA;AACA;AAEAG,EAAAA,MAAM,GAAG;AACP,UAAMC,gBAAgB,GAAGb,GAAI;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAfI;AAgBA,wBACE,QAAC,SAAD;AAAA,6BACE,QAAC,KAAD;AAAO,QAAA,KAAK,EAAEa,gBAAd;AAAgC,QAAA,WAAW,EAAE,KAAKL,aAAL,EAA7C;AAAA,kBAEI,QAA8B;AAAA,cAA7B;AAAEC,YAAAA,IAAF;AAAQK,YAAAA,OAAR;AAAiBC,YAAAA;AAAjB,WAA6B;AAC5B,cAAID,OAAJ,EAAa,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP;AACb,cAAIC,KAAJ,EAAWC,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,OAAlB;AAEX,8BAAO,QAAC,IAAD;AAAA,sBAEHT,IAAI,CAACF,UAAL,CAAgBY,GAAhB,CAAoBC,OAAO,iBACzB,QAAC,YAAD;AAAiC,cAAA,OAAO,EAAEA;AAA1C,eAAmBA,OAAO,CAACC,IAA3B;AAAA;AAAA;AAAA;AAAA,oBADF;AAFG;AAAA;AAAA;AAAA;AAAA,kBAAP;AAOD;AAbL;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAoBD;;AA1DgC;;AAA7BlB,U,CAWGmB,S,GAAY,E;AAkDrB,eAAenB,UAAf;AAEA,MAAMoB,SAAS,GAAG1B,MAAM,CAAC2B,GAAI;AAC7B;AACA,CAFA;KAAMD,S;AAGN,MAAME,IAAI,GAAG5B,MAAM,CAAC2B,GAAI;AACxB;AACA;AACA,CAHA;MAAMC,I;AAIN,MAAMC,MAAM,GAAG7B,MAAM,CAAC2B,GAAI;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAdA","sourcesContent":["import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components'\nimport { CategoryItem } from './CategoryItem';\nimport { Query } from 'react-apollo'\nimport { gql } from 'graphql-tag'\nimport CategoryName from './CategoryName'\nimport Navbar from './Navbar'\n\n\nclass Categories extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      categories: []\n    }\n  }\n\n  getCategories(data){\n    thsi.setState({categories: data})\n  }\n  static propTypes = {}\n\n  // filterClothes = (cat) => {\n  //   const results = this.data.categories.filter((catItem) => {\n  //     return catItem.name === catItem.name\n  //     console.log(catItem[0].name)\n  //   })\n  //   this.setState({clothes_data: results})\n  // }\n\n  render() {\n    const CATEGORIES_QUERY = gql`\n    query categoriesQuery{ \n        categories{\n          name\n          products{\n            name\n            brand\n            id\n            gallery\n            description\n            inStock\n            category\n          }\n        }\n    }\n`\n    return (\n      <Container>\n        <Query query={CATEGORIES_QUERY} onCompleted={this.getCategories()}>\n          {\n            ({ data, loading, error }) => {\n              if (loading) return <h3>loading in categories</h3>\n              if (error) console.log(error.message)\n\n              return <Wrap>\n                {\n                  data.categories.map(catItem => (\n                    <CategoryItem key={catItem.name} catItem={catItem} />\n                  ))\n                }\n              </Wrap>\n            }\n          }\n        </Query>\n      </Container>\n    )\n  }\n}\n\nexport default Categories\n\nconst Container = styled.div`\n  // display: flex;\n`\nconst Wrap = styled.div`\n   display: flex;\n   flex-direction: column;\n`\nconst Button = styled.div`\n  font-weight: 600;\n  color: white;\n  background-color: #5ECE7B;\n  height: 40px;\n  width: 250px;\n  display: flex;\n  justify-content: center;\n  border-radius: 3px; \n  opacity: 0.85;\n  font-size: 13px;\n  cursor: pointer;\n  margin-top: 20px;\n  align-items: center;  \n  `"]},"metadata":{},"sourceType":"module"}