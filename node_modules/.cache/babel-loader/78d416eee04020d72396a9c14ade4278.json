{"ast":null,"code":"var _jsxFileName = \"/Volumes/Nana/I_T/projects_code/react/scandiweb_task/src/components/Products.js\";\nimport React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { gql } from 'graphql-tag';\nimport { Query } from 'react-apollo';\nimport styled from 'styled-components';\nimport { Category_bar } from './Category_bar';\nimport Product from './Product'; // const CATEGORIES_QUERY = gql`\n//     query CategoriesQuery($id: String!){ \n//         product(id: $id){\n//             inStock\n//             id\n//             description\n//             name\n//             gallery\n//             }\n//         }\n// `\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CATEGORIES_QUERY = gql`\n    query CategoriesQuery{ \n        categories{\n          name\n          products{\n            id\n            name\n            gallery\n            description\n            inStock\n            brand\n\n          }\n          \n        }\n    }\n`;\nexport class Products extends Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(Query, {\n        query: CATEGORIES_QUERY,\n        children: _ref => {\n          let {\n            data,\n            loading,\n            error\n          } = _ref;\n          if (loading) return /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Loading\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 34\n          }, this);\n          if (error) console.log(error.message);\n          return /*#__PURE__*/_jsxDEV(Wrap, {\n            children: data.categories.map(cat => /*#__PURE__*/_jsxDEV(Product, {\n              cat: cat\n            }, cat.name, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 22\n          }, this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this) // <div>\n    //   <Product />\n    // </div>\n    ;\n  }\n\n}\nProducts.propTypes = {};\nexport default Products;\nconst Container = styled.div`\n  display: flex;\n  padding: 15px;\n`;\n_c = Container;\nconst Wrap = styled.div`\n  display: flex;\n  \n`;\n_c2 = Wrap;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"Wrap\");","map":{"version":3,"sources":["/Volumes/Nana/I_T/projects_code/react/scandiweb_task/src/components/Products.js"],"names":["React","Component","Fragment","PropTypes","gql","Query","styled","Category_bar","Product","CATEGORIES_QUERY","Products","render","data","loading","error","console","log","message","categories","map","cat","name","propTypes","Container","div","Wrap"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,GAAT,QAAoB,aAApB;AACA,SAASC,KAAT,QAAsB,cAAtB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,YAAT,QAA6B,gBAA7B;AACA,OAAOC,OAAP,MAAoB,WAApB,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,MAAMC,gBAAgB,GAAGL,GAAI;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAhBA;AAkBA,OAAO,MAAMM,QAAN,SAAuBT,SAAvB,CAAiC;AAKtCU,EAAAA,MAAM,GAAG;AAEP,wBACE,QAAC,SAAD;AAAA,6BACE,QAAC,KAAD;AAAO,QAAA,KAAK,EAAEF,gBAAd;AAAA,kBAEI,QAA2B;AAAA,cAA1B;AAACG,YAAAA,IAAD;AAAOC,YAAAA,OAAP;AAAgBC,YAAAA;AAAhB,WAA0B;AACzB,cAAGD,OAAH,EAAY,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP;AACZ,cAAGC,KAAH,EAAUC,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,OAAlB;AAEV,8BAAO,QAAC,IAAD;AAAA,sBAELL,IAAI,CAACM,UAAL,CAAgBC,GAAhB,CAAoBC,GAAG,iBACrB,QAAC,OAAD;AAAwB,cAAA,GAAG,EAAEA;AAA7B,eAAcA,GAAG,CAACC,IAAlB;AAAA;AAAA;AAAA;AAAA,oBADF;AAFK;AAAA;AAAA;AAAA;AAAA,kBAAP;AAWD;AAjBL;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,CAwBE;AACA;AACA;AA1BF;AA6BD;;AApCqC;AAA3BX,Q,CACJY,S,GAAY,E;AAsCrB,eAAeZ,QAAf;AAEA,MAAMa,SAAS,GAAGjB,MAAM,CAACkB,GAAI;AAC7B;AACA;AACA,CAHA;KAAMD,S;AAIN,MAAME,IAAI,GAAGnB,MAAM,CAACkB,GAAI;AACxB;AACA;AACA,CAHA;MAAMC,I","sourcesContent":["import React, { Component, Fragment } from 'react'\nimport PropTypes from 'prop-types'\nimport { gql } from 'graphql-tag'\nimport { Query } from 'react-apollo'\nimport styled from 'styled-components'\nimport { Category_bar } from './Category_bar';\nimport Product from './Product'\n\n// const CATEGORIES_QUERY = gql`\n//     query CategoriesQuery($id: String!){ \n//         product(id: $id){\n//             inStock\n//             id\n//             description\n//             name\n//             gallery\n//             }\n//         }\n// `\n\nconst CATEGORIES_QUERY = gql`\n    query CategoriesQuery{ \n        categories{\n          name\n          products{\n            id\n            name\n            gallery\n            description\n            inStock\n            brand\n\n          }\n          \n        }\n    }\n`\n\nexport class Products extends Component {\n  static propTypes = {\n\n  }\n\n  render() {\n    \n    return (\n      <Container>\n        <Query query={CATEGORIES_QUERY} >\n          {\n            ({data, loading, error}) =>{\n              if(loading) return <h4>Loading</h4>\n              if(error) console.log(error.message)\n              \n              return <Wrap>\n                {\n                data.categories.map(cat => (\n                  <Product key={cat.name} cat={cat}/>\n                ))\n                }\n                {/* {\n                 console.log(data.categories[1].products[0].gallery)\n                } */}\n              </Wrap>\n\n            }\n          }\n        </Query>\n      </Container>\n\n      // <div>\n      //   <Product />\n      // </div>\n\n    )\n  }\n}\n\nexport default Products\n\nconst Container = styled.div`\n  display: flex;\n  padding: 15px;\n`\nconst Wrap = styled.div`\n  display: flex;\n  \n`"]},"metadata":{},"sourceType":"module"}