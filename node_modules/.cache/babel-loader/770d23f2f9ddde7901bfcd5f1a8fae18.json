{"ast":null,"code":"var _jsxFileName = \"/Volumes/Nana/I_T/projects_code/react/scandiweb_task/src/Navbar.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { gql } from 'graphql-tag';\nimport { Query } from 'react-apollo';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CATEGORIES_QUERY = gql`\n    query CategoriesQuery {\n        categories{\n            name\n            products{\n                brand\n                name\n                description\n            }\n        }\n    }\n`;\n\nclass Navbar extends Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Also add this\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Query, {\n        query: CATEGORIES_QUERY,\n        children: _ref => {\n          let {\n            loading,\n            error,\n            data\n          } = _ref;\n          if (loading) return /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"loading\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 38\n          }, this);\n          if (error) console.log(error);\n          return h;\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nNavbar.propTypes = {};\nexport default Navbar;","map":{"version":3,"sources":["/Volumes/Nana/I_T/projects_code/react/scandiweb_task/src/Navbar.js"],"names":["React","Component","PropTypes","gql","Query","CATEGORIES_QUERY","Navbar","render","loading","error","data","console","log","h","propTypes"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAAQC,GAAR,QAAkB,aAAlB;AACA,SAAQC,KAAR,QAAoB,cAApB;;AAEA,MAAMC,gBAAgB,GAAGF,GAAI;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAXA;;AAaA,MAAMG,MAAN,SAAqBL,SAArB,CAA+B;AAK7BM,EAAAA,MAAM,GAAG;AAEP,wBACE;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,KAAD;AAAO,QAAA,KAAK,EAAEF,gBAAd;AAAA,kBAEM,QAA4B;AAAA,cAA3B;AAACG,YAAAA,OAAD;AAAUC,YAAAA,KAAV;AAAiBC,YAAAA;AAAjB,WAA2B;AACxB,cAAGF,OAAH,EAAY,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP;AACZ,cAAGC,KAAH,EAAUE,OAAO,CAACC,GAAR,CAAYH,KAAZ;AAEV,iBAAOI,CAAP;AACH;AAPP;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAeD;;AAtB4B;;AAAzBP,M,CACGQ,S,GAAY,E;AAwBrB,eAAeR,MAAf","sourcesContent":["import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport {gql} from 'graphql-tag'\nimport {Query} from 'react-apollo'\n\nconst CATEGORIES_QUERY = gql`\n    query CategoriesQuery {\n        categories{\n            name\n            products{\n                brand\n                name\n                description\n            }\n        }\n    }\n`\n\nclass Navbar extends Component {\n  static propTypes = {\n\n  }\n\n  render() {\n    \n    return (\n      <div>\n        <h4>Also add this</h4>\n        <Query query={CATEGORIES_QUERY}>\n          {\n              ({loading, error, data}) => {\n                  if(loading) return <h4>loading</h4>\n                  if(error) console.log(error)\n                  \n                  return h\n              }\n          }\n        </Query>\n      </div>\n    )\n  }\n}\n\nexport default Navbar\n"]},"metadata":{},"sourceType":"module"}