{"ast":null,"code":"var _jsxFileName = \"/Volumes/Nana/I_T/projects_code/react/scandiweb_task/src/App.js\";\nimport './App.css';\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { ApolloProvider } from 'react-apollo';\nimport ApolloClient from 'apollo-boost';\nimport axios from 'axios';\nimport { BrowserRouter as Router, Switch, Route, Link, Redirect } from \"react-router-dom\";\nimport { InMemoryCache } from 'apollo-boost';\nimport Home from './components/Home';\nimport { ProductList } from './Pages/ProductList';\nimport { Navbar } from './components/Navbar';\nimport { Products } from './components/Products';\nimport { Product } from './components/Product';\nimport { Launch } from './components/Launch';\nimport { ProductItem } from './components/ProductItem';\nimport { Cart } from './Cart';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst client = new ApolloClient({\n  uri: 'http://localhost:4000/gql',\n  cache: new InMemoryCache()\n});\nexport class App extends Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(ApolloProvider, {\n      client: client,\n      children: /*#__PURE__*/_jsxDEV(Router, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"app\",\n          children: /*#__PURE__*/_jsxDEV(Switch, {\n            children: [/*#__PURE__*/_jsxDEV(Route, {\n              path: \"/products/:name\",\n              component: Products\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              exact: true,\n              path: \"/\",\n              children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 35,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Redirect, {\n                to: \"/products/all\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 36,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/cart\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/product/:id\",\n              component: Product\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this);\n  }\n\n} // client.defaultOptions = {\n//   watchQuery: {\n//     fetchPolicy: 'network-only',\n//     errorPolicy: 'ignore',\n//   },\n//   query: {\n//     fetchPolicy: 'network-only',\n//     errorPolicy: 'all',\n//   },\n// };\n\nApp.propTypes = {};\nexport default App;","map":{"version":3,"sources":["/Volumes/Nana/I_T/projects_code/react/scandiweb_task/src/App.js"],"names":["React","Component","PropTypes","ApolloProvider","ApolloClient","axios","BrowserRouter","Router","Switch","Route","Link","Redirect","InMemoryCache","Home","ProductList","Navbar","Products","Product","Launch","ProductItem","Cart","client","uri","cache","App","render","propTypes"],"mappings":";AAAA,OAAO,WAAP;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,cAAT,QAA+B,cAA/B;AACA,OAAOC,YAAP,MAAyB,cAAzB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,MAAlC,EAA0CC,KAA1C,EAAiDC,IAAjD,EAAuDC,QAAvD,QAAuE,kBAAvE;AACA,SAASC,aAAT,QAA8B,cAA9B;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,SAASC,WAAT,QAA4B,qBAA5B;AACA,SAASC,MAAT,QAAuB,qBAAvB;AACA,SAASC,QAAT,QAAyB,uBAAzB;AACA,SAASC,OAAT,QAAwB,sBAAxB;AACA,SAASC,MAAT,QAAuB,qBAAvB;AACA,SAASC,WAAT,QAA4B,0BAA5B;AACA,SAASC,IAAT,QAAqB,QAArB;;AAGA,MAAMC,MAAM,GAAG,IAAIjB,YAAJ,CAAiB;AAC9BkB,EAAAA,GAAG,EAAE,2BADyB;AAE9BC,EAAAA,KAAK,EAAE,IAAIX,aAAJ;AAFuB,CAAjB,CAAf;AAKA,OAAO,MAAMY,GAAN,SAAkBvB,SAAlB,CAA4B;AAGjCwB,EAAAA,MAAM,GAAG;AACP,wBACE,QAAC,cAAD;AAAgB,MAAA,MAAM,EAAEJ,MAAxB;AAAA,6BACE,QAAC,MAAD;AAAA,+BACE;AAAK,UAAA,SAAS,EAAC,KAAf;AAAA,iCACE,QAAC,MAAD;AAAA,oCACE,QAAC,KAAD;AAAO,cAAA,IAAI,EAAC,iBAAZ;AAA8B,cAAA,SAAS,EAAEL;AAAzC;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE,QAAC,KAAD;AAAO,cAAA,KAAK,MAAZ;AAAa,cAAA,IAAI,EAAC,GAAlB;AAAA,sCACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE,QAAC,QAAD;AAAU,gBAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,sBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF,eAME,QAAC,KAAD;AAAO,cAAA,IAAI,EAAC;AAAZ;AAAA;AAAA;AAAA;AAAA,oBANF,eAQE,QAAC,KAAD;AAAO,cAAA,IAAI,EAAC,cAAZ;AAA2B,cAAA,SAAS,EAAEC;AAAtC;AAAA;AAAA;AAAA;AAAA,oBARF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AA2BD;;AA/BgC,C,CAkCnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AA3CaO,G,CACJE,S,GAAY,E;AA4CrB,eAAeF,GAAf","sourcesContent":["import './App.css'\nimport React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { ApolloProvider } from 'react-apollo'\nimport ApolloClient from 'apollo-boost'\nimport axios from 'axios';\nimport { BrowserRouter as Router, Switch, Route, Link, Redirect } from \"react-router-dom\"\nimport { InMemoryCache } from 'apollo-boost'\nimport Home from './components/Home';\nimport { ProductList } from './Pages/ProductList';\nimport { Navbar } from './components/Navbar';\nimport { Products } from './components/Products';\nimport { Product } from './components/Product';\nimport { Launch } from './components/Launch';\nimport { ProductItem } from './components/ProductItem';\nimport { Cart } from './Cart';\n\n\nconst client = new ApolloClient({\n  uri: 'http://localhost:4000/gql',\n  cache: new InMemoryCache()\n})\n\nexport class App extends Component {\n  static propTypes = {}\n\n  render() {\n    return (\n      <ApolloProvider client={client}>\n        <Router>\n          <div className='app'>\n            <Switch>\n              <Route path='/products/:name' component={Products}/>\n              <Route exact path='/'>\n                <Navbar />\n                <Redirect to='/products/all'/>\n              </Route>\n              <Route path='/cart'>\n              </Route> \n              <Route path='/product/:id' component={Product}/>\n              \n              {/* <Route path='/cat/:name'>\n                <Product />\n              </Route>\n              <Route path=\"/product/:id\">\n                <Navbar />\n                <ProductItem />\n              </Route> */}\n              {/* <Route path=\"/product/:name\" component={ProductItem}/> */}\n            </Switch>\n          </div>\n        </Router>\n      </ApolloProvider>\n    )\n  }\n}\n\n// client.defaultOptions = {\n//   watchQuery: {\n//     fetchPolicy: 'network-only',\n//     errorPolicy: 'ignore',\n//   },\n//   query: {\n//     fetchPolicy: 'network-only',\n//     errorPolicy: 'all',\n//   },\n// };\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}