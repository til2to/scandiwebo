{"ast":null,"code":"var _jsxFileName = \"/Volumes/Nana/I_T/projects_code/react/scandiweb_task/src/components/Products.js\";\nimport React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { Query } from 'react-apollo';\nimport { gql } from 'graphql-tag';\nimport styled from 'styled-components';\nimport CategoryName from './CategoryName';\nimport Product from './Product';\nimport ProductPage from '../Pages/ProductPage';\nimport { GET_CATEGORIES } from './Data';\nimport { params } from 'react-router-dom';\nimport { axios } from 'axios'; // const CATEGORIES_QUERY = gql`\n//     query CategoriesQuery($id: String!){ \n//         product(id: $id){\n//             inStock\n//             id\n//             description\n//             name\n//             gallery\n//             }\n//         }\n// `\n// const PRODUCT_QUERY = gql`\n//     query productQuery($id: String!){ \n//         product(id: $id){\n//           name\n//           id\n//           description\n//           brand\n//           inStock\n//           category\n//           attributes{\n//             name\n//             id\n//             type\n//           }\n//           }\n//         }\n// `\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PRODUCT_QUERY = gql`\n    query productQuery($title: String!){ \n        category(input: {title: $title}){\n          name\n          products{\n            inStock\n            name\n            id\n            brand\n            description\n            gallery\n          }\n      }\n    }\n`; // ($name: String!)\n// (name: $name)\n\nexport class Products extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      clothes_data: []\n    };\n\n    this.changeOrder = title => {\n      // const { allItemQuery } = this.props\n      let {\n        PRODUCT_QUERY\n      } = this.props;\n      const result = PRODUCT_QUERY({\n        variables: {\n          title: \"clothes\"\n        }\n      }); //Set state or store filter data\n\n      this.setState({\n        clothes_data: result\n      });\n    };\n  }\n\n  render() {\n    let {\n      category\n    } = this.props;\n    let {\n      name\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => this.changeOrder(\"clothes\"),\n        children: \"Newest\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Query, {\n        query: PRODUCT_QUERY,\n        variables: {\n          title: \"\"\n        },\n        children: _ref => {\n          let {\n            data,\n            loading,\n            error\n          } = _ref;\n          if (loading) return /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Loading\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 35\n          }, this);\n          if (error) console.log(error.message);\n          console.log(data.category); // const catego = data.category\n\n          return /*#__PURE__*/_jsxDEV(Wrap, {\n            children: data.category.products.map(prod => /*#__PURE__*/_jsxDEV(Product, {\n              prod: prod\n            }, prod.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 22\n          }, this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this);\n  }\n\n}\nexport default Products;\nconst Container = styled.div`\n  // display: flex;\n  padding: 10px;\n`;\n_c = Container;\nconst Wrap = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  margin-left: 20px;\n`;\n_c2 = Wrap;\nconst Button = styled.div`\n  font-weight: 600;\n  color: white;\n  background-color: #5ECE7B;\n  height: 40px;\n  width: 250px;\n  display: flex;\n  justify-content: center;\n  border-radius: 3px; \n  opacity: 0.85;\n  font-size: 13px;\n  cursor: pointer;\n  margin-top: 20px;\n  align-items: center;  \n  `; // send the category name to top left of the container\n// const CatContainer = styled.div`\n//   height: 50px;\n//   padding: 20px;\n// `\n// const CatWrap = styled.div`\n//   font-size: 30px;\n//   font-weight: 100;\n// `\n\n_c3 = Button;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"Wrap\");\n$RefreshReg$(_c3, \"Button\");","map":{"version":3,"sources":["/Volumes/Nana/I_T/projects_code/react/scandiweb_task/src/components/Products.js"],"names":["React","Component","Fragment","PropTypes","Query","gql","styled","CategoryName","Product","ProductPage","GET_CATEGORIES","params","axios","PRODUCT_QUERY","Products","state","clothes_data","changeOrder","title","props","result","variables","setState","render","category","name","data","loading","error","console","log","message","products","map","prod","id","Container","div","Wrap","Button"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from 'react'\nimport PropTypes from 'prop-types'\nimport { Query } from 'react-apollo'\nimport { gql } from 'graphql-tag'\nimport styled from 'styled-components'\nimport CategoryName  from './CategoryName';\nimport Product from './Product'\nimport ProductPage from '../Pages/ProductPage'\nimport { GET_CATEGORIES } from './Data'\nimport { params } from 'react-router-dom';\nimport { axios } from 'axios'\n\n// const CATEGORIES_QUERY = gql`\n//     query CategoriesQuery($id: String!){ \n//         product(id: $id){\n//             inStock\n//             id\n//             description\n//             name\n//             gallery\n//             }\n//         }\n// `\n\n// const PRODUCT_QUERY = gql`\n//     query productQuery($id: String!){ \n//         product(id: $id){\n//           name\n//           id\n//           description\n//           brand\n//           inStock\n//           category\n//           attributes{\n//             name\n//             id\n//             type\n//           }\n//           }\n//         }\n// `\n\nconst PRODUCT_QUERY = gql`\n    query productQuery($title: String!){ \n        category(input: {title: $title}){\n          name\n          products{\n            inStock\n            name\n            id\n            brand\n            description\n            gallery\n          }\n      }\n    }\n`\n// ($name: String!)\n// (name: $name)\n\nexport class Products extends Component {\n  \n  state={\n    clothes_data: []\n  }\n\n  changeOrder = (title) => {\n    // const { allItemQuery } = this.props\n    let { PRODUCT_QUERY } = this.props\n    const result = PRODUCT_QUERY({ variables: { title: \"clothes\" } })\n    //Set state or store filter data\n    this.setState({clothes_data: result})\n  }\n\n  render() {\n    let { category } = this.props\n    let { name } = this.props\n\n    \n\n    return (      \n      <Container>\n        <Button onClick={()=>this.changeOrder(\"clothes\")}>Newest</Button>\n        <Query query={PRODUCT_QUERY} variables={{title: \"\"}}>\n          {\n            ({ data, loading, error }) => {\n              if (loading) return <h4>Loading</h4>\n              if (error) console.log(error.message)\n              console.log(data.category)\n              // const catego = data.category\n\n              return <Wrap>\n                {/* <Product gallery={gallery}/> */}\n\n                { \n                  data.category.products.map(prod => (\n                    <Product key={prod.id} prod={prod} />\n                  ))\n                }\n              </Wrap>\n            }\n          }\n        </Query>\n      </Container>\n    )\n  }\n}\n\nexport default Products\n\nconst Container = styled.div`\n  // display: flex;\n  padding: 10px;\n`\nconst Wrap = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  margin-left: 20px;\n`\nconst Button = styled.div`\n  font-weight: 600;\n  color: white;\n  background-color: #5ECE7B;\n  height: 40px;\n  width: 250px;\n  display: flex;\n  justify-content: center;\n  border-radius: 3px; \n  opacity: 0.85;\n  font-size: 13px;\n  cursor: pointer;\n  margin-top: 20px;\n  align-items: center;  \n  `\n\n// send the category name to top left of the container\n// const CatContainer = styled.div`\n//   height: 50px;\n//   padding: 20px;\n// `\n// const CatWrap = styled.div`\n//   font-size: 30px;\n//   font-weight: 100;\n// `"]},"metadata":{},"sourceType":"module"}