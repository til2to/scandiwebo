{"ast":null,"code":"var _jsxFileName = \"/Volumes/Nana/I_T/projects_code/react/scandiweb_task/src/Navbar.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { gql } from 'graphql-tag';\nimport { Query } from 'react-apollo'; // const CATEGORIES_QUERY = gql`\n//     query CategoriesQuery {\n//         categories{\n//             name\n//             products{\n//                 brand\n//                 name\n//                 description\n//             }\n//         }\n//     }\n// `\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class Navbar extends Component {\n  constructor() {\n    super(...arguments);\n\n    this.CategoriesQuery = () => {\n      this.props.client.query({\n        query: gql`\n        {\n            categories{\n                name\n                products\n            }\n        }\n     `\n      }).then(result => {\n        console.log(data);\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Also add this\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this);\n  }\n\n}\nNavbar.propTypes = {};\nexport default Navbar;","map":{"version":3,"sources":["/Volumes/Nana/I_T/projects_code/react/scandiweb_task/src/Navbar.js"],"names":["React","Component","PropTypes","gql","Query","Navbar","CategoriesQuery","props","client","query","then","result","console","log","data","render","propTypes"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,GAAT,QAAoB,aAApB;AACA,SAASC,KAAT,QAAsB,cAAtB,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,OAAO,MAAMC,MAAN,SAAqBJ,SAArB,CAA+B;AAAA;AAAA;;AAAA,SAKpCK,eALoC,GAKlB,MAAK;AACrB,WAAKC,KAAL,CAAWC,MAAX,CAAkBC,KAAlB,CAAwB;AACpBA,QAAAA,KAAK,EAACN,GAAI;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AAR4B,OAAxB,EASGO,IATH,CASQC,MAAM,IAAI;AAACC,QAAAA,OAAO,CAACC,GAAR,CAAYC,IAAZ;AAAkB,OATrC;AAUD,KAhBmC;AAAA;;AAkBpCC,EAAAA,MAAM,GAAG;AAEP,wBACE;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAaE;AAAA;AAAA;AAAA;AAAA,cAbF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAiBD;;AArCmC;AAAzBV,M,CACJW,S,GAAY,E;AAuCrB,eAAeX,MAAf","sourcesContent":["import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { gql } from 'graphql-tag'\nimport { Query } from 'react-apollo'\n\n// const CATEGORIES_QUERY = gql`\n//     query CategoriesQuery {\n//         categories{\n//             name\n//             products{\n//                 brand\n//                 name\n//                 description\n//             }\n//         }\n//     }\n// `\n\nexport class Navbar extends Component {\n  static propTypes = {\n\n  }\n\n  CategoriesQuery = () =>{\n    this.props.client.query({\n        query:gql`\n        {\n            categories{\n                name\n                products\n            }\n        }\n     `\n    }).then(result => {console.log(data)})\n  }\n\n  render() {\n    \n    return (\n      <div>\n        <h4>Also add this</h4>\n        {/* <Query query={CATEGORIES_QUERY}>\n          {\n              ({loading, error, data}) => {\n                if(loading) {return <h3>loading</h3>};\n                if(error) console.log(error);\n                return console.log(data)\n\n                return <h2>successful</h2>\n              }\n          }\n        </Query> */}\n        <button></button>\n      </div>\n    )\n  }\n}\n\nexport default Navbar\n"]},"metadata":{},"sourceType":"module"}