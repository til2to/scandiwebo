{"ast":null,"code":"var _jsxFileName = \"/Volumes/Nana/I_T/projects_code/react/scandiweb_task/src/components/Products.js\";\nimport React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { Query } from 'react-apollo';\nimport { gql } from 'graphql-tag';\nimport styled from 'styled-components';\nimport CategoryName from './CategoryName';\nimport Product from './Product';\nimport { GET_CATEGORIES } from './Data'; // const CATEGORIES_QUERY = gql`\n//     query CategoriesQuery($id: String!){ \n//         product(id: $id){\n//             inStock\n//             id\n//             description\n//             name\n//             gallery\n//             }\n//         }\n// `\n// const PRODUCT_QUERY = gql`\n//     query productQuery($id: String!){ \n//         product(id: $id){\n//           name\n//           id\n//           description\n//           brand\n//           inStock\n//           category\n//           attributes{\n//             name\n//             id\n//             type\n//           }\n//           }\n//         }\n// `\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst PRODUCT_QUERY = gql`\n    query productQuery{ \n        category{\n          name\n          products{\n            inStock\n            name\n            id\n            brand\n            description\n            gallery\n          }\n          }\n      }\n`;\nexport class Products extends Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(Query, {\n        query: PRODUCT_QUERY,\n        children: _ref => {\n          let {\n            data,\n            loading,\n            error\n          } = _ref;\n          if (loading) return /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Loading\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 35\n          }, this);\n          if (error) console.log(error.message); // console.log(data.category.products)\n\n          const {\n            name\n          } = data.category;\n          return /*#__PURE__*/_jsxDEV(Wrap, {\n            children: [/*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false), /*#__PURE__*/_jsxDEV(CategoryName, {\n              name: name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 17\n            }, this), data.category.products.map(prod => /*#__PURE__*/_jsxDEV(Product, {\n              prod: prod\n            }, prod.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 21\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 22\n          }, this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this);\n  }\n\n}\nProducts.propTypes = {};\nexport default Products;\nconst Container = styled.div`\n  // display: flex;\n  padding: 10px;\n  \n  position: relative;\n  \n`;\n_c = Container;\nconst Wrap = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n`; // send the category name to top left of the container\n\n_c2 = Wrap;\nconst CatContainer = styled.div`\n  height: 50px;\n  margin: 0 40px;\n  padding: 20px;\n`;\nconst CatWrap = styled.div`\n  font-size: 30px;\n  font-weight: 100;\n  \n\n`;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"Wrap\");","map":{"version":3,"sources":["/Volumes/Nana/I_T/projects_code/react/scandiweb_task/src/components/Products.js"],"names":["React","Component","Fragment","PropTypes","Query","gql","styled","CategoryName","Product","GET_CATEGORIES","PRODUCT_QUERY","Products","render","data","loading","error","console","log","message","name","category","products","map","prod","id","propTypes","Container","div","Wrap","CatContainer","CatWrap"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,KAAT,QAAsB,cAAtB;AACA,SAASC,GAAT,QAAoB,aAApB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,YAAP,MAA0B,gBAA1B;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAASC,cAAT,QAA+B,QAA/B,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAEA,MAAMC,aAAa,GAAGL,GAAI;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAdA;AAgBA,OAAO,MAAMM,QAAN,SAAuBV,SAAvB,CAAiC;AAKtCW,EAAAA,MAAM,GAAG;AAEP,wBAEE,QAAC,SAAD;AAAA,6BACE,QAAC,KAAD;AAAO,QAAA,KAAK,EAAEF,aAAd;AAAA,kBAEI,QAA8B;AAAA,cAA7B;AAAEG,YAAAA,IAAF;AAAQC,YAAAA,OAAR;AAAiBC,YAAAA;AAAjB,WAA6B;AAC5B,cAAID,OAAJ,EAAa,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP;AACb,cAAIC,KAAJ,EAAWC,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,OAAlB,EAFiB,CAI5B;;AAEA,gBAAM;AAAEC,YAAAA;AAAF,cAAWN,IAAI,CAACO,QAAtB;AAEA,8BAAO,QAAC,IAAD;AAAA,oCAEL,qCAFK,eAGL,QAAC,YAAD;AAAc,cAAA,IAAI,EAAED;AAApB;AAAA;AAAA;AAAA;AAAA,oBAHK,EAKHN,IAAI,CAACO,QAAL,CAAcC,QAAd,CAAuBC,GAAvB,CAA2BC,IAAI,iBAC7B,QAAC,OAAD;AAAuB,cAAA,IAAI,EAAEA;AAA7B,eAAcA,IAAI,CAACC,EAAnB;AAAA;AAAA;AAAA;AAAA,oBADF,CALG;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP;AAWD;AArBL;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFF;AA8BD;;AArCqC;AAA3Bb,Q,CACJc,S,GAAY,E;AAuCrB,eAAed,QAAf;AAEA,MAAMe,SAAS,GAAGpB,MAAM,CAACqB,GAAI;AAC7B;AACA;AACA;AACA;AACA;AACA,CANA;KAAMD,S;AAON,MAAME,IAAI,GAAGtB,MAAM,CAACqB,GAAI;AACxB;AACA;AACA,CAHA,C,CAIA;;MAJMC,I;AAKN,MAAMC,YAAY,GAAGvB,MAAM,CAACqB,GAAI;AAChC;AACA;AACA;AACA,CAJA;AAKA,MAAMG,OAAO,GAAGxB,MAAM,CAACqB,GAAI;AAC3B;AACA;AACA;AACA;AACA,CALA","sourcesContent":["import React, { Component, Fragment } from 'react'\nimport PropTypes from 'prop-types'\nimport { Query } from 'react-apollo'\nimport { gql } from 'graphql-tag'\nimport styled from 'styled-components'\nimport CategoryName  from './CategoryName';\nimport Product from './Product'\nimport { GET_CATEGORIES } from './Data'\n\n// const CATEGORIES_QUERY = gql`\n//     query CategoriesQuery($id: String!){ \n//         product(id: $id){\n//             inStock\n//             id\n//             description\n//             name\n//             gallery\n//             }\n//         }\n// `\n\n// const PRODUCT_QUERY = gql`\n//     query productQuery($id: String!){ \n//         product(id: $id){\n//           name\n//           id\n//           description\n//           brand\n//           inStock\n//           category\n//           attributes{\n//             name\n//             id\n//             type\n//           }\n//           }\n//         }\n// `\n\nconst PRODUCT_QUERY = gql`\n    query productQuery{ \n        category{\n          name\n          products{\n            inStock\n            name\n            id\n            brand\n            description\n            gallery\n          }\n          }\n      }\n`\n\nexport class Products extends Component {\n  static propTypes = {\n\n  }\n\n  render() {\n    \n    return (\n      \n      <Container>\n        <Query query={PRODUCT_QUERY} >\n          {\n            ({ data, loading, error }) => {\n              if (loading) return <h3>Loading</h3>\n              if (error) console.log(error.message)\n\n              // console.log(data.category.products)\n\n              const { name } = data.category;\n              \n              return <Wrap>\n                {/* <h2>Successful</h2> */}\n                <></>\n                <CategoryName name={name}/>  \n                {\n                  data.category.products.map(prod => (\n                    <Product key={prod.id} prod={prod} />\n                  ))\n                }\n                \n              </Wrap>\n            }\n          }\n        </Query>\n      </Container>\n\n    )\n  }\n}\n\nexport default Products\n\nconst Container = styled.div`\n  // display: flex;\n  padding: 10px;\n  \n  position: relative;\n  \n`\nconst Wrap = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n`\n// send the category name to top left of the container\nconst CatContainer = styled.div`\n  height: 50px;\n  margin: 0 40px;\n  padding: 20px;\n`\nconst CatWrap = styled.div`\n  font-size: 30px;\n  font-weight: 100;\n  \n\n`"]},"metadata":{},"sourceType":"module"}