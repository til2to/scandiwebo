{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.anyTypeAnnotation = anyTypeAnnotation;\nexports.argumentPlaceholder = argumentPlaceholder;\nexports.arrayExpression = arrayExpression;\nexports.arrayPattern = arrayPattern;\nexports.arrayTypeAnnotation = arrayTypeAnnotation;\nexports.arrowFunctionExpression = arrowFunctionExpression;\nexports.assignmentExpression = assignmentExpression;\nexports.assignmentPattern = assignmentPattern;\nexports.awaitExpression = awaitExpression;\nexports.bigIntLiteral = bigIntLiteral;\nexports.binaryExpression = binaryExpression;\nexports.bindExpression = bindExpression;\nexports.blockStatement = blockStatement;\nexports.booleanLiteral = booleanLiteral;\nexports.booleanLiteralTypeAnnotation = booleanLiteralTypeAnnotation;\nexports.booleanTypeAnnotation = booleanTypeAnnotation;\nexports.breakStatement = breakStatement;\nexports.callExpression = callExpression;\nexports.catchClause = catchClause;\nexports.classAccessorProperty = classAccessorProperty;\nexports.classBody = classBody;\nexports.classDeclaration = classDeclaration;\nexports.classExpression = classExpression;\nexports.classImplements = classImplements;\nexports.classMethod = classMethod;\nexports.classPrivateMethod = classPrivateMethod;\nexports.classPrivateProperty = classPrivateProperty;\nexports.classProperty = classProperty;\nexports.conditionalExpression = conditionalExpression;\nexports.continueStatement = continueStatement;\nexports.debuggerStatement = debuggerStatement;\nexports.decimalLiteral = decimalLiteral;\nexports.declareClass = declareClass;\nexports.declareExportAllDeclaration = declareExportAllDeclaration;\nexports.declareExportDeclaration = declareExportDeclaration;\nexports.declareFunction = declareFunction;\nexports.declareInterface = declareInterface;\nexports.declareModule = declareModule;\nexports.declareModuleExports = declareModuleExports;\nexports.declareOpaqueType = declareOpaqueType;\nexports.declareTypeAlias = declareTypeAlias;\nexports.declareVariable = declareVariable;\nexports.declaredPredicate = declaredPredicate;\nexports.decorator = decorator;\nexports.directive = directive;\nexports.directiveLiteral = directiveLiteral;\nexports.doExpression = doExpression;\nexports.doWhileStatement = doWhileStatement;\nexports.emptyStatement = emptyStatement;\nexports.emptyTypeAnnotation = emptyTypeAnnotation;\nexports.enumBooleanBody = enumBooleanBody;\nexports.enumBooleanMember = enumBooleanMember;\nexports.enumDeclaration = enumDeclaration;\nexports.enumDefaultedMember = enumDefaultedMember;\nexports.enumNumberBody = enumNumberBody;\nexports.enumNumberMember = enumNumberMember;\nexports.enumStringBody = enumStringBody;\nexports.enumStringMember = enumStringMember;\nexports.enumSymbolBody = enumSymbolBody;\nexports.existsTypeAnnotation = existsTypeAnnotation;\nexports.exportAllDeclaration = exportAllDeclaration;\nexports.exportDefaultDeclaration = exportDefaultDeclaration;\nexports.exportDefaultSpecifier = exportDefaultSpecifier;\nexports.exportNamedDeclaration = exportNamedDeclaration;\nexports.exportNamespaceSpecifier = exportNamespaceSpecifier;\nexports.exportSpecifier = exportSpecifier;\nexports.expressionStatement = expressionStatement;\nexports.file = file;\nexports.forInStatement = forInStatement;\nexports.forOfStatement = forOfStatement;\nexports.forStatement = forStatement;\nexports.functionDeclaration = functionDeclaration;\nexports.functionExpression = functionExpression;\nexports.functionTypeAnnotation = functionTypeAnnotation;\nexports.functionTypeParam = functionTypeParam;\nexports.genericTypeAnnotation = genericTypeAnnotation;\nexports.identifier = identifier;\nexports.ifStatement = ifStatement;\nexports.import = _import;\nexports.importAttribute = importAttribute;\nexports.importDeclaration = importDeclaration;\nexports.importDefaultSpecifier = importDefaultSpecifier;\nexports.importNamespaceSpecifier = importNamespaceSpecifier;\nexports.importSpecifier = importSpecifier;\nexports.indexedAccessType = indexedAccessType;\nexports.inferredPredicate = inferredPredicate;\nexports.interfaceDeclaration = interfaceDeclaration;\nexports.interfaceExtends = interfaceExtends;\nexports.interfaceTypeAnnotation = interfaceTypeAnnotation;\nexports.interpreterDirective = interpreterDirective;\nexports.intersectionTypeAnnotation = intersectionTypeAnnotation;\nexports.jSXAttribute = exports.jsxAttribute = jsxAttribute;\nexports.jSXClosingElement = exports.jsxClosingElement = jsxClosingElement;\nexports.jSXClosingFragment = exports.jsxClosingFragment = jsxClosingFragment;\nexports.jSXElement = exports.jsxElement = jsxElement;\nexports.jSXEmptyExpression = exports.jsxEmptyExpression = jsxEmptyExpression;\nexports.jSXExpressionContainer = exports.jsxExpressionContainer = jsxExpressionContainer;\nexports.jSXFragment = exports.jsxFragment = jsxFragment;\nexports.jSXIdentifier = exports.jsxIdentifier = jsxIdentifier;\nexports.jSXMemberExpression = exports.jsxMemberExpression = jsxMemberExpression;\nexports.jSXNamespacedName = exports.jsxNamespacedName = jsxNamespacedName;\nexports.jSXOpeningElement = exports.jsxOpeningElement = jsxOpeningElement;\nexports.jSXOpeningFragment = exports.jsxOpeningFragment = jsxOpeningFragment;\nexports.jSXSpreadAttribute = exports.jsxSpreadAttribute = jsxSpreadAttribute;\nexports.jSXSpreadChild = exports.jsxSpreadChild = jsxSpreadChild;\nexports.jSXText = exports.jsxText = jsxText;\nexports.labeledStatement = labeledStatement;\nexports.logicalExpression = logicalExpression;\nexports.memberExpression = memberExpression;\nexports.metaProperty = metaProperty;\nexports.mixedTypeAnnotation = mixedTypeAnnotation;\nexports.moduleExpression = moduleExpression;\nexports.newExpression = newExpression;\nexports.noop = noop;\nexports.nullLiteral = nullLiteral;\nexports.nullLiteralTypeAnnotation = nullLiteralTypeAnnotation;\nexports.nullableTypeAnnotation = nullableTypeAnnotation;\nexports.numberLiteral = NumberLiteral;\nexports.numberLiteralTypeAnnotation = numberLiteralTypeAnnotation;\nexports.numberTypeAnnotation = numberTypeAnnotation;\nexports.numericLiteral = numericLiteral;\nexports.objectExpression = objectExpression;\nexports.objectMethod = objectMethod;\nexports.objectPattern = objectPattern;\nexports.objectProperty = objectProperty;\nexports.objectTypeAnnotation = objectTypeAnnotation;\nexports.objectTypeCallProperty = objectTypeCallProperty;\nexports.objectTypeIndexer = objectTypeIndexer;\nexports.objectTypeInternalSlot = objectTypeInternalSlot;\nexports.objectTypeProperty = objectTypeProperty;\nexports.objectTypeSpreadProperty = objectTypeSpreadProperty;\nexports.opaqueType = opaqueType;\nexports.optionalCallExpression = optionalCallExpression;\nexports.optionalIndexedAccessType = optionalIndexedAccessType;\nexports.optionalMemberExpression = optionalMemberExpression;\nexports.parenthesizedExpression = parenthesizedExpression;\nexports.pipelineBareFunction = pipelineBareFunction;\nexports.pipelinePrimaryTopicReference = pipelinePrimaryTopicReference;\nexports.pipelineTopicExpression = pipelineTopicExpression;\nexports.placeholder = placeholder;\nexports.privateName = privateName;\nexports.program = program;\nexports.qualifiedTypeIdentifier = qualifiedTypeIdentifier;\nexports.recordExpression = recordExpression;\nexports.regExpLiteral = regExpLiteral;\nexports.regexLiteral = RegexLiteral;\nexports.restElement = restElement;\nexports.restProperty = RestProperty;\nexports.returnStatement = returnStatement;\nexports.sequenceExpression = sequenceExpression;\nexports.spreadElement = spreadElement;\nexports.spreadProperty = SpreadProperty;\nexports.staticBlock = staticBlock;\nexports.stringLiteral = stringLiteral;\nexports.stringLiteralTypeAnnotation = stringLiteralTypeAnnotation;\nexports.stringTypeAnnotation = stringTypeAnnotation;\nexports.super = _super;\nexports.switchCase = switchCase;\nexports.switchStatement = switchStatement;\nexports.symbolTypeAnnotation = symbolTypeAnnotation;\nexports.taggedTemplateExpression = taggedTemplateExpression;\nexports.templateElement = templateElement;\nexports.templateLiteral = templateLiteral;\nexports.thisExpression = thisExpression;\nexports.thisTypeAnnotation = thisTypeAnnotation;\nexports.throwStatement = throwStatement;\nexports.topicReference = topicReference;\nexports.tryStatement = tryStatement;\nexports.tSAnyKeyword = exports.tsAnyKeyword = tsAnyKeyword;\nexports.tSArrayType = exports.tsArrayType = tsArrayType;\nexports.tSAsExpression = exports.tsAsExpression = tsAsExpression;\nexports.tSBigIntKeyword = exports.tsBigIntKeyword = tsBigIntKeyword;\nexports.tSBooleanKeyword = exports.tsBooleanKeyword = tsBooleanKeyword;\nexports.tSCallSignatureDeclaration = exports.tsCallSignatureDeclaration = tsCallSignatureDeclaration;\nexports.tSConditionalType = exports.tsConditionalType = tsConditionalType;\nexports.tSConstructSignatureDeclaration = exports.tsConstructSignatureDeclaration = tsConstructSignatureDeclaration;\nexports.tSConstructorType = exports.tsConstructorType = tsConstructorType;\nexports.tSDeclareFunction = exports.tsDeclareFunction = tsDeclareFunction;\nexports.tSDeclareMethod = exports.tsDeclareMethod = tsDeclareMethod;\nexports.tSEnumDeclaration = exports.tsEnumDeclaration = tsEnumDeclaration;\nexports.tSEnumMember = exports.tsEnumMember = tsEnumMember;\nexports.tSExportAssignment = exports.tsExportAssignment = tsExportAssignment;\nexports.tSExpressionWithTypeArguments = exports.tsExpressionWithTypeArguments = tsExpressionWithTypeArguments;\nexports.tSExternalModuleReference = exports.tsExternalModuleReference = tsExternalModuleReference;\nexports.tSFunctionType = exports.tsFunctionType = tsFunctionType;\nexports.tSImportEqualsDeclaration = exports.tsImportEqualsDeclaration = tsImportEqualsDeclaration;\nexports.tSImportType = exports.tsImportType = tsImportType;\nexports.tSIndexSignature = exports.tsIndexSignature = tsIndexSignature;\nexports.tSIndexedAccessType = exports.tsIndexedAccessType = tsIndexedAccessType;\nexports.tSInferType = exports.tsInferType = tsInferType;\nexports.tSInterfaceBody = exports.tsInterfaceBody = tsInterfaceBody;\nexports.tSInterfaceDeclaration = exports.tsInterfaceDeclaration = tsInterfaceDeclaration;\nexports.tSIntersectionType = exports.tsIntersectionType = tsIntersectionType;\nexports.tSIntrinsicKeyword = exports.tsIntrinsicKeyword = tsIntrinsicKeyword;\nexports.tSLiteralType = exports.tsLiteralType = tsLiteralType;\nexports.tSMappedType = exports.tsMappedType = tsMappedType;\nexports.tSMethodSignature = exports.tsMethodSignature = tsMethodSignature;\nexports.tSModuleBlock = exports.tsModuleBlock = tsModuleBlock;\nexports.tSModuleDeclaration = exports.tsModuleDeclaration = tsModuleDeclaration;\nexports.tSNamedTupleMember = exports.tsNamedTupleMember = tsNamedTupleMember;\nexports.tSNamespaceExportDeclaration = exports.tsNamespaceExportDeclaration = tsNamespaceExportDeclaration;\nexports.tSNeverKeyword = exports.tsNeverKeyword = tsNeverKeyword;\nexports.tSNonNullExpression = exports.tsNonNullExpression = tsNonNullExpression;\nexports.tSNullKeyword = exports.tsNullKeyword = tsNullKeyword;\nexports.tSNumberKeyword = exports.tsNumberKeyword = tsNumberKeyword;\nexports.tSObjectKeyword = exports.tsObjectKeyword = tsObjectKeyword;\nexports.tSOptionalType = exports.tsOptionalType = tsOptionalType;\nexports.tSParameterProperty = exports.tsParameterProperty = tsParameterProperty;\nexports.tSParenthesizedType = exports.tsParenthesizedType = tsParenthesizedType;\nexports.tSPropertySignature = exports.tsPropertySignature = tsPropertySignature;\nexports.tSQualifiedName = exports.tsQualifiedName = tsQualifiedName;\nexports.tSRestType = exports.tsRestType = tsRestType;\nexports.tSStringKeyword = exports.tsStringKeyword = tsStringKeyword;\nexports.tSSymbolKeyword = exports.tsSymbolKeyword = tsSymbolKeyword;\nexports.tSThisType = exports.tsThisType = tsThisType;\nexports.tSTupleType = exports.tsTupleType = tsTupleType;\nexports.tSTypeAliasDeclaration = exports.tsTypeAliasDeclaration = tsTypeAliasDeclaration;\nexports.tSTypeAnnotation = exports.tsTypeAnnotation = tsTypeAnnotation;\nexports.tSTypeAssertion = exports.tsTypeAssertion = tsTypeAssertion;\nexports.tSTypeLiteral = exports.tsTypeLiteral = tsTypeLiteral;\nexports.tSTypeOperator = exports.tsTypeOperator = tsTypeOperator;\nexports.tSTypeParameter = exports.tsTypeParameter = tsTypeParameter;\nexports.tSTypeParameterDeclaration = exports.tsTypeParameterDeclaration = tsTypeParameterDeclaration;\nexports.tSTypeParameterInstantiation = exports.tsTypeParameterInstantiation = tsTypeParameterInstantiation;\nexports.tSTypePredicate = exports.tsTypePredicate = tsTypePredicate;\nexports.tSTypeQuery = exports.tsTypeQuery = tsTypeQuery;\nexports.tSTypeReference = exports.tsTypeReference = tsTypeReference;\nexports.tSUndefinedKeyword = exports.tsUndefinedKeyword = tsUndefinedKeyword;\nexports.tSUnionType = exports.tsUnionType = tsUnionType;\nexports.tSUnknownKeyword = exports.tsUnknownKeyword = tsUnknownKeyword;\nexports.tSVoidKeyword = exports.tsVoidKeyword = tsVoidKeyword;\nexports.tupleExpression = tupleExpression;\nexports.tupleTypeAnnotation = tupleTypeAnnotation;\nexports.typeAlias = typeAlias;\nexports.typeAnnotation = typeAnnotation;\nexports.typeCastExpression = typeCastExpression;\nexports.typeParameter = typeParameter;\nexports.typeParameterDeclaration = typeParameterDeclaration;\nexports.typeParameterInstantiation = typeParameterInstantiation;\nexports.typeofTypeAnnotation = typeofTypeAnnotation;\nexports.unaryExpression = unaryExpression;\nexports.unionTypeAnnotation = unionTypeAnnotation;\nexports.updateExpression = updateExpression;\nexports.v8IntrinsicIdentifier = v8IntrinsicIdentifier;\nexports.variableDeclaration = variableDeclaration;\nexports.variableDeclarator = variableDeclarator;\nexports.variance = variance;\nexports.voidTypeAnnotation = voidTypeAnnotation;\nexports.whileStatement = whileStatement;\nexports.withStatement = withStatement;\nexports.yieldExpression = yieldExpression;\n\nvar _builder = require(\"../builder\");\n\nfunction arrayExpression(elements) {\n  return _builder.default.apply(\"ArrayExpression\", arguments);\n}\n\nfunction assignmentExpression(operator, left, right) {\n  return _builder.default.apply(\"AssignmentExpression\", arguments);\n}\n\nfunction binaryExpression(operator, left, right) {\n  return _builder.default.apply(\"BinaryExpression\", arguments);\n}\n\nfunction interpreterDirective(value) {\n  return _builder.default.apply(\"InterpreterDirective\", arguments);\n}\n\nfunction directive(value) {\n  return _builder.default.apply(\"Directive\", arguments);\n}\n\nfunction directiveLiteral(value) {\n  return _builder.default.apply(\"DirectiveLiteral\", arguments);\n}\n\nfunction blockStatement(body, directives) {\n  return _builder.default.apply(\"BlockStatement\", arguments);\n}\n\nfunction breakStatement(label) {\n  return _builder.default.apply(\"BreakStatement\", arguments);\n}\n\nfunction callExpression(callee, _arguments) {\n  return _builder.default.apply(\"CallExpression\", arguments);\n}\n\nfunction catchClause(param, body) {\n  return _builder.default.apply(\"CatchClause\", arguments);\n}\n\nfunction conditionalExpression(test, consequent, alternate) {\n  return _builder.default.apply(\"ConditionalExpression\", arguments);\n}\n\nfunction continueStatement(label) {\n  return _builder.default.apply(\"ContinueStatement\", arguments);\n}\n\nfunction debuggerStatement() {\n  return _builder.default.apply(\"DebuggerStatement\", arguments);\n}\n\nfunction doWhileStatement(test, body) {\n  return _builder.default.apply(\"DoWhileStatement\", arguments);\n}\n\nfunction emptyStatement() {\n  return _builder.default.apply(\"EmptyStatement\", arguments);\n}\n\nfunction expressionStatement(expression) {\n  return _builder.default.apply(\"ExpressionStatement\", arguments);\n}\n\nfunction file(program, comments, tokens) {\n  return _builder.default.apply(\"File\", arguments);\n}\n\nfunction forInStatement(left, right, body) {\n  return _builder.default.apply(\"ForInStatement\", arguments);\n}\n\nfunction forStatement(init, test, update, body) {\n  return _builder.default.apply(\"ForStatement\", arguments);\n}\n\nfunction functionDeclaration(id, params, body, generator, async) {\n  return _builder.default.apply(\"FunctionDeclaration\", arguments);\n}\n\nfunction functionExpression(id, params, body, generator, async) {\n  return _builder.default.apply(\"FunctionExpression\", arguments);\n}\n\nfunction identifier(name) {\n  return _builder.default.apply(\"Identifier\", arguments);\n}\n\nfunction ifStatement(test, consequent, alternate) {\n  return _builder.default.apply(\"IfStatement\", arguments);\n}\n\nfunction labeledStatement(label, body) {\n  return _builder.default.apply(\"LabeledStatement\", arguments);\n}\n\nfunction stringLiteral(value) {\n  return _builder.default.apply(\"StringLiteral\", arguments);\n}\n\nfunction numericLiteral(value) {\n  return _builder.default.apply(\"NumericLiteral\", arguments);\n}\n\nfunction nullLiteral() {\n  return _builder.default.apply(\"NullLiteral\", arguments);\n}\n\nfunction booleanLiteral(value) {\n  return _builder.default.apply(\"BooleanLiteral\", arguments);\n}\n\nfunction regExpLiteral(pattern, flags) {\n  return _builder.default.apply(\"RegExpLiteral\", arguments);\n}\n\nfunction logicalExpression(operator, left, right) {\n  return _builder.default.apply(\"LogicalExpression\", arguments);\n}\n\nfunction memberExpression(object, property, computed, optional) {\n  return _builder.default.apply(\"MemberExpression\", arguments);\n}\n\nfunction newExpression(callee, _arguments) {\n  return _builder.default.apply(\"NewExpression\", arguments);\n}\n\nfunction program(body, directives, sourceType, interpreter) {\n  return _builder.default.apply(\"Program\", arguments);\n}\n\nfunction objectExpression(properties) {\n  return _builder.default.apply(\"ObjectExpression\", arguments);\n}\n\nfunction objectMethod(kind, key, params, body, computed, generator, async) {\n  return _builder.default.apply(\"ObjectMethod\", arguments);\n}\n\nfunction objectProperty(key, value, computed, shorthand, decorators) {\n  return _builder.default.apply(\"ObjectProperty\", arguments);\n}\n\nfunction restElement(argument) {\n  return _builder.default.apply(\"RestElement\", arguments);\n}\n\nfunction returnStatement(argument) {\n  return _builder.default.apply(\"ReturnStatement\", arguments);\n}\n\nfunction sequenceExpression(expressions) {\n  return _builder.default.apply(\"SequenceExpression\", arguments);\n}\n\nfunction parenthesizedExpression(expression) {\n  return _builder.default.apply(\"ParenthesizedExpression\", arguments);\n}\n\nfunction switchCase(test, consequent) {\n  return _builder.default.apply(\"SwitchCase\", arguments);\n}\n\nfunction switchStatement(discriminant, cases) {\n  return _builder.default.apply(\"SwitchStatement\", arguments);\n}\n\nfunction thisExpression() {\n  return _builder.default.apply(\"ThisExpression\", arguments);\n}\n\nfunction throwStatement(argument) {\n  return _builder.default.apply(\"ThrowStatement\", arguments);\n}\n\nfunction tryStatement(block, handler, finalizer) {\n  return _builder.default.apply(\"TryStatement\", arguments);\n}\n\nfunction unaryExpression(operator, argument, prefix) {\n  return _builder.default.apply(\"UnaryExpression\", arguments);\n}\n\nfunction updateExpression(operator, argument, prefix) {\n  return _builder.default.apply(\"UpdateExpression\", arguments);\n}\n\nfunction variableDeclaration(kind, declarations) {\n  return _builder.default.apply(\"VariableDeclaration\", arguments);\n}\n\nfunction variableDeclarator(id, init) {\n  return _builder.default.apply(\"VariableDeclarator\", arguments);\n}\n\nfunction whileStatement(test, body) {\n  return _builder.default.apply(\"WhileStatement\", arguments);\n}\n\nfunction withStatement(object, body) {\n  return _builder.default.apply(\"WithStatement\", arguments);\n}\n\nfunction assignmentPattern(left, right) {\n  return _builder.default.apply(\"AssignmentPattern\", arguments);\n}\n\nfunction arrayPattern(elements) {\n  return _builder.default.apply(\"ArrayPattern\", arguments);\n}\n\nfunction arrowFunctionExpression(params, body, async) {\n  return _builder.default.apply(\"ArrowFunctionExpression\", arguments);\n}\n\nfunction classBody(body) {\n  return _builder.default.apply(\"ClassBody\", arguments);\n}\n\nfunction classExpression(id, superClass, body, decorators) {\n  return _builder.default.apply(\"ClassExpression\", arguments);\n}\n\nfunction classDeclaration(id, superClass, body, decorators) {\n  return _builder.default.apply(\"ClassDeclaration\", arguments);\n}\n\nfunction exportAllDeclaration(source) {\n  return _builder.default.apply(\"ExportAllDeclaration\", arguments);\n}\n\nfunction exportDefaultDeclaration(declaration) {\n  return _builder.default.apply(\"ExportDefaultDeclaration\", arguments);\n}\n\nfunction exportNamedDeclaration(declaration, specifiers, source) {\n  return _builder.default.apply(\"ExportNamedDeclaration\", arguments);\n}\n\nfunction exportSpecifier(local, exported) {\n  return _builder.default.apply(\"ExportSpecifier\", arguments);\n}\n\nfunction forOfStatement(left, right, body, _await) {\n  return _builder.default.apply(\"ForOfStatement\", arguments);\n}\n\nfunction importDeclaration(specifiers, source) {\n  return _builder.default.apply(\"ImportDeclaration\", arguments);\n}\n\nfunction importDefaultSpecifier(local) {\n  return _builder.default.apply(\"ImportDefaultSpecifier\", arguments);\n}\n\nfunction importNamespaceSpecifier(local) {\n  return _builder.default.apply(\"ImportNamespaceSpecifier\", arguments);\n}\n\nfunction importSpecifier(local, imported) {\n  return _builder.default.apply(\"ImportSpecifier\", arguments);\n}\n\nfunction metaProperty(meta, property) {\n  return _builder.default.apply(\"MetaProperty\", arguments);\n}\n\nfunction classMethod(kind, key, params, body, computed, _static, generator, async) {\n  return _builder.default.apply(\"ClassMethod\", arguments);\n}\n\nfunction objectPattern(properties) {\n  return _builder.default.apply(\"ObjectPattern\", arguments);\n}\n\nfunction spreadElement(argument) {\n  return _builder.default.apply(\"SpreadElement\", arguments);\n}\n\nfunction _super() {\n  return _builder.default.apply(\"Super\", arguments);\n}\n\nfunction taggedTemplateExpression(tag, quasi) {\n  return _builder.default.apply(\"TaggedTemplateExpression\", arguments);\n}\n\nfunction templateElement(value, tail) {\n  return _builder.default.apply(\"TemplateElement\", arguments);\n}\n\nfunction templateLiteral(quasis, expressions) {\n  return _builder.default.apply(\"TemplateLiteral\", arguments);\n}\n\nfunction yieldExpression(argument, delegate) {\n  return _builder.default.apply(\"YieldExpression\", arguments);\n}\n\nfunction awaitExpression(argument) {\n  return _builder.default.apply(\"AwaitExpression\", arguments);\n}\n\nfunction _import() {\n  return _builder.default.apply(\"Import\", arguments);\n}\n\nfunction bigIntLiteral(value) {\n  return _builder.default.apply(\"BigIntLiteral\", arguments);\n}\n\nfunction exportNamespaceSpecifier(exported) {\n  return _builder.default.apply(\"ExportNamespaceSpecifier\", arguments);\n}\n\nfunction optionalMemberExpression(object, property, computed, optional) {\n  return _builder.default.apply(\"OptionalMemberExpression\", arguments);\n}\n\nfunction optionalCallExpression(callee, _arguments, optional) {\n  return _builder.default.apply(\"OptionalCallExpression\", arguments);\n}\n\nfunction classProperty(key, value, typeAnnotation, decorators, computed, _static) {\n  return _builder.default.apply(\"ClassProperty\", arguments);\n}\n\nfunction classAccessorProperty(key, value, typeAnnotation, decorators, computed, _static) {\n  return _builder.default.apply(\"ClassAccessorProperty\", arguments);\n}\n\nfunction classPrivateProperty(key, value, decorators, _static) {\n  return _builder.default.apply(\"ClassPrivateProperty\", arguments);\n}\n\nfunction classPrivateMethod(kind, key, params, body, _static) {\n  return _builder.default.apply(\"ClassPrivateMethod\", arguments);\n}\n\nfunction privateName(id) {\n  return _builder.default.apply(\"PrivateName\", arguments);\n}\n\nfunction staticBlock(body) {\n  return _builder.default.apply(\"StaticBlock\", arguments);\n}\n\nfunction anyTypeAnnotation() {\n  return _builder.default.apply(\"AnyTypeAnnotation\", arguments);\n}\n\nfunction arrayTypeAnnotation(elementType) {\n  return _builder.default.apply(\"ArrayTypeAnnotation\", arguments);\n}\n\nfunction booleanTypeAnnotation() {\n  return _builder.default.apply(\"BooleanTypeAnnotation\", arguments);\n}\n\nfunction booleanLiteralTypeAnnotation(value) {\n  return _builder.default.apply(\"BooleanLiteralTypeAnnotation\", arguments);\n}\n\nfunction nullLiteralTypeAnnotation() {\n  return _builder.default.apply(\"NullLiteralTypeAnnotation\", arguments);\n}\n\nfunction classImplements(id, typeParameters) {\n  return _builder.default.apply(\"ClassImplements\", arguments);\n}\n\nfunction declareClass(id, typeParameters, _extends, body) {\n  return _builder.default.apply(\"DeclareClass\", arguments);\n}\n\nfunction declareFunction(id) {\n  return _builder.default.apply(\"DeclareFunction\", arguments);\n}\n\nfunction declareInterface(id, typeParameters, _extends, body) {\n  return _builder.default.apply(\"DeclareInterface\", arguments);\n}\n\nfunction declareModule(id, body, kind) {\n  return _builder.default.apply(\"DeclareModule\", arguments);\n}\n\nfunction declareModuleExports(typeAnnotation) {\n  return _builder.default.apply(\"DeclareModuleExports\", arguments);\n}\n\nfunction declareTypeAlias(id, typeParameters, right) {\n  return _builder.default.apply(\"DeclareTypeAlias\", arguments);\n}\n\nfunction declareOpaqueType(id, typeParameters, supertype) {\n  return _builder.default.apply(\"DeclareOpaqueType\", arguments);\n}\n\nfunction declareVariable(id) {\n  return _builder.default.apply(\"DeclareVariable\", arguments);\n}\n\nfunction declareExportDeclaration(declaration, specifiers, source) {\n  return _builder.default.apply(\"DeclareExportDeclaration\", arguments);\n}\n\nfunction declareExportAllDeclaration(source) {\n  return _builder.default.apply(\"DeclareExportAllDeclaration\", arguments);\n}\n\nfunction declaredPredicate(value) {\n  return _builder.default.apply(\"DeclaredPredicate\", arguments);\n}\n\nfunction existsTypeAnnotation() {\n  return _builder.default.apply(\"ExistsTypeAnnotation\", arguments);\n}\n\nfunction functionTypeAnnotation(typeParameters, params, rest, returnType) {\n  return _builder.default.apply(\"FunctionTypeAnnotation\", arguments);\n}\n\nfunction functionTypeParam(name, typeAnnotation) {\n  return _builder.default.apply(\"FunctionTypeParam\", arguments);\n}\n\nfunction genericTypeAnnotation(id, typeParameters) {\n  return _builder.default.apply(\"GenericTypeAnnotation\", arguments);\n}\n\nfunction inferredPredicate() {\n  return _builder.default.apply(\"InferredPredicate\", arguments);\n}\n\nfunction interfaceExtends(id, typeParameters) {\n  return _builder.default.apply(\"InterfaceExtends\", arguments);\n}\n\nfunction interfaceDeclaration(id, typeParameters, _extends, body) {\n  return _builder.default.apply(\"InterfaceDeclaration\", arguments);\n}\n\nfunction interfaceTypeAnnotation(_extends, body) {\n  return _builder.default.apply(\"InterfaceTypeAnnotation\", arguments);\n}\n\nfunction intersectionTypeAnnotation(types) {\n  return _builder.default.apply(\"IntersectionTypeAnnotation\", arguments);\n}\n\nfunction mixedTypeAnnotation() {\n  return _builder.default.apply(\"MixedTypeAnnotation\", arguments);\n}\n\nfunction emptyTypeAnnotation() {\n  return _builder.default.apply(\"EmptyTypeAnnotation\", arguments);\n}\n\nfunction nullableTypeAnnotation(typeAnnotation) {\n  return _builder.default.apply(\"NullableTypeAnnotation\", arguments);\n}\n\nfunction numberLiteralTypeAnnotation(value) {\n  return _builder.default.apply(\"NumberLiteralTypeAnnotation\", arguments);\n}\n\nfunction numberTypeAnnotation() {\n  return _builder.default.apply(\"NumberTypeAnnotation\", arguments);\n}\n\nfunction objectTypeAnnotation(properties, indexers, callProperties, internalSlots, exact) {\n  return _builder.default.apply(\"ObjectTypeAnnotation\", arguments);\n}\n\nfunction objectTypeInternalSlot(id, value, optional, _static, method) {\n  return _builder.default.apply(\"ObjectTypeInternalSlot\", arguments);\n}\n\nfunction objectTypeCallProperty(value) {\n  return _builder.default.apply(\"ObjectTypeCallProperty\", arguments);\n}\n\nfunction objectTypeIndexer(id, key, value, variance) {\n  return _builder.default.apply(\"ObjectTypeIndexer\", arguments);\n}\n\nfunction objectTypeProperty(key, value, variance) {\n  return _builder.default.apply(\"ObjectTypeProperty\", arguments);\n}\n\nfunction objectTypeSpreadProperty(argument) {\n  return _builder.default.apply(\"ObjectTypeSpreadProperty\", arguments);\n}\n\nfunction opaqueType(id, typeParameters, supertype, impltype) {\n  return _builder.default.apply(\"OpaqueType\", arguments);\n}\n\nfunction qualifiedTypeIdentifier(id, qualification) {\n  return _builder.default.apply(\"QualifiedTypeIdentifier\", arguments);\n}\n\nfunction stringLiteralTypeAnnotation(value) {\n  return _builder.default.apply(\"StringLiteralTypeAnnotation\", arguments);\n}\n\nfunction stringTypeAnnotation() {\n  return _builder.default.apply(\"StringTypeAnnotation\", arguments);\n}\n\nfunction symbolTypeAnnotation() {\n  return _builder.default.apply(\"SymbolTypeAnnotation\", arguments);\n}\n\nfunction thisTypeAnnotation() {\n  return _builder.default.apply(\"ThisTypeAnnotation\", arguments);\n}\n\nfunction tupleTypeAnnotation(types) {\n  return _builder.default.apply(\"TupleTypeAnnotation\", arguments);\n}\n\nfunction typeofTypeAnnotation(argument) {\n  return _builder.default.apply(\"TypeofTypeAnnotation\", arguments);\n}\n\nfunction typeAlias(id, typeParameters, right) {\n  return _builder.default.apply(\"TypeAlias\", arguments);\n}\n\nfunction typeAnnotation(typeAnnotation) {\n  return _builder.default.apply(\"TypeAnnotation\", arguments);\n}\n\nfunction typeCastExpression(expression, typeAnnotation) {\n  return _builder.default.apply(\"TypeCastExpression\", arguments);\n}\n\nfunction typeParameter(bound, _default, variance) {\n  return _builder.default.apply(\"TypeParameter\", arguments);\n}\n\nfunction typeParameterDeclaration(params) {\n  return _builder.default.apply(\"TypeParameterDeclaration\", arguments);\n}\n\nfunction typeParameterInstantiation(params) {\n  return _builder.default.apply(\"TypeParameterInstantiation\", arguments);\n}\n\nfunction unionTypeAnnotation(types) {\n  return _builder.default.apply(\"UnionTypeAnnotation\", arguments);\n}\n\nfunction variance(kind) {\n  return _builder.default.apply(\"Variance\", arguments);\n}\n\nfunction voidTypeAnnotation() {\n  return _builder.default.apply(\"VoidTypeAnnotation\", arguments);\n}\n\nfunction enumDeclaration(id, body) {\n  return _builder.default.apply(\"EnumDeclaration\", arguments);\n}\n\nfunction enumBooleanBody(members) {\n  return _builder.default.apply(\"EnumBooleanBody\", arguments);\n}\n\nfunction enumNumberBody(members) {\n  return _builder.default.apply(\"EnumNumberBody\", arguments);\n}\n\nfunction enumStringBody(members) {\n  return _builder.default.apply(\"EnumStringBody\", arguments);\n}\n\nfunction enumSymbolBody(members) {\n  return _builder.default.apply(\"EnumSymbolBody\", arguments);\n}\n\nfunction enumBooleanMember(id) {\n  return _builder.default.apply(\"EnumBooleanMember\", arguments);\n}\n\nfunction enumNumberMember(id, init) {\n  return _builder.default.apply(\"EnumNumberMember\", arguments);\n}\n\nfunction enumStringMember(id, init) {\n  return _builder.default.apply(\"EnumStringMember\", arguments);\n}\n\nfunction enumDefaultedMember(id) {\n  return _builder.default.apply(\"EnumDefaultedMember\", arguments);\n}\n\nfunction indexedAccessType(objectType, indexType) {\n  return _builder.default.apply(\"IndexedAccessType\", arguments);\n}\n\nfunction optionalIndexedAccessType(objectType, indexType) {\n  return _builder.default.apply(\"OptionalIndexedAccessType\", arguments);\n}\n\nfunction jsxAttribute(name, value) {\n  return _builder.default.apply(\"JSXAttribute\", arguments);\n}\n\nfunction jsxClosingElement(name) {\n  return _builder.default.apply(\"JSXClosingElement\", arguments);\n}\n\nfunction jsxElement(openingElement, closingElement, children, selfClosing) {\n  return _builder.default.apply(\"JSXElement\", arguments);\n}\n\nfunction jsxEmptyExpression() {\n  return _builder.default.apply(\"JSXEmptyExpression\", arguments);\n}\n\nfunction jsxExpressionContainer(expression) {\n  return _builder.default.apply(\"JSXExpressionContainer\", arguments);\n}\n\nfunction jsxSpreadChild(expression) {\n  return _builder.default.apply(\"JSXSpreadChild\", arguments);\n}\n\nfunction jsxIdentifier(name) {\n  return _builder.default.apply(\"JSXIdentifier\", arguments);\n}\n\nfunction jsxMemberExpression(object, property) {\n  return _builder.default.apply(\"JSXMemberExpression\", arguments);\n}\n\nfunction jsxNamespacedName(namespace, name) {\n  return _builder.default.apply(\"JSXNamespacedName\", arguments);\n}\n\nfunction jsxOpeningElement(name, attributes, selfClosing) {\n  return _builder.default.apply(\"JSXOpeningElement\", arguments);\n}\n\nfunction jsxSpreadAttribute(argument) {\n  return _builder.default.apply(\"JSXSpreadAttribute\", arguments);\n}\n\nfunction jsxText(value) {\n  return _builder.default.apply(\"JSXText\", arguments);\n}\n\nfunction jsxFragment(openingFragment, closingFragment, children) {\n  return _builder.default.apply(\"JSXFragment\", arguments);\n}\n\nfunction jsxOpeningFragment() {\n  return _builder.default.apply(\"JSXOpeningFragment\", arguments);\n}\n\nfunction jsxClosingFragment() {\n  return _builder.default.apply(\"JSXClosingFragment\", arguments);\n}\n\nfunction noop() {\n  return _builder.default.apply(\"Noop\", arguments);\n}\n\nfunction placeholder(expectedNode, name) {\n  return _builder.default.apply(\"Placeholder\", arguments);\n}\n\nfunction v8IntrinsicIdentifier(name) {\n  return _builder.default.apply(\"V8IntrinsicIdentifier\", arguments);\n}\n\nfunction argumentPlaceholder() {\n  return _builder.default.apply(\"ArgumentPlaceholder\", arguments);\n}\n\nfunction bindExpression(object, callee) {\n  return _builder.default.apply(\"BindExpression\", arguments);\n}\n\nfunction importAttribute(key, value) {\n  return _builder.default.apply(\"ImportAttribute\", arguments);\n}\n\nfunction decorator(expression) {\n  return _builder.default.apply(\"Decorator\", arguments);\n}\n\nfunction doExpression(body, async) {\n  return _builder.default.apply(\"DoExpression\", arguments);\n}\n\nfunction exportDefaultSpecifier(exported) {\n  return _builder.default.apply(\"ExportDefaultSpecifier\", arguments);\n}\n\nfunction recordExpression(properties) {\n  return _builder.default.apply(\"RecordExpression\", arguments);\n}\n\nfunction tupleExpression(elements) {\n  return _builder.default.apply(\"TupleExpression\", arguments);\n}\n\nfunction decimalLiteral(value) {\n  return _builder.default.apply(\"DecimalLiteral\", arguments);\n}\n\nfunction moduleExpression(body) {\n  return _builder.default.apply(\"ModuleExpression\", arguments);\n}\n\nfunction topicReference() {\n  return _builder.default.apply(\"TopicReference\", arguments);\n}\n\nfunction pipelineTopicExpression(expression) {\n  return _builder.default.apply(\"PipelineTopicExpression\", arguments);\n}\n\nfunction pipelineBareFunction(callee) {\n  return _builder.default.apply(\"PipelineBareFunction\", arguments);\n}\n\nfunction pipelinePrimaryTopicReference() {\n  return _builder.default.apply(\"PipelinePrimaryTopicReference\", arguments);\n}\n\nfunction tsParameterProperty(parameter) {\n  return _builder.default.apply(\"TSParameterProperty\", arguments);\n}\n\nfunction tsDeclareFunction(id, typeParameters, params, returnType) {\n  return _builder.default.apply(\"TSDeclareFunction\", arguments);\n}\n\nfunction tsDeclareMethod(decorators, key, typeParameters, params, returnType) {\n  return _builder.default.apply(\"TSDeclareMethod\", arguments);\n}\n\nfunction tsQualifiedName(left, right) {\n  return _builder.default.apply(\"TSQualifiedName\", arguments);\n}\n\nfunction tsCallSignatureDeclaration(typeParameters, parameters, typeAnnotation) {\n  return _builder.default.apply(\"TSCallSignatureDeclaration\", arguments);\n}\n\nfunction tsConstructSignatureDeclaration(typeParameters, parameters, typeAnnotation) {\n  return _builder.default.apply(\"TSConstructSignatureDeclaration\", arguments);\n}\n\nfunction tsPropertySignature(key, typeAnnotation, initializer) {\n  return _builder.default.apply(\"TSPropertySignature\", arguments);\n}\n\nfunction tsMethodSignature(key, typeParameters, parameters, typeAnnotation) {\n  return _builder.default.apply(\"TSMethodSignature\", arguments);\n}\n\nfunction tsIndexSignature(parameters, typeAnnotation) {\n  return _builder.default.apply(\"TSIndexSignature\", arguments);\n}\n\nfunction tsAnyKeyword() {\n  return _builder.default.apply(\"TSAnyKeyword\", arguments);\n}\n\nfunction tsBooleanKeyword() {\n  return _builder.default.apply(\"TSBooleanKeyword\", arguments);\n}\n\nfunction tsBigIntKeyword() {\n  return _builder.default.apply(\"TSBigIntKeyword\", arguments);\n}\n\nfunction tsIntrinsicKeyword() {\n  return _builder.default.apply(\"TSIntrinsicKeyword\", arguments);\n}\n\nfunction tsNeverKeyword() {\n  return _builder.default.apply(\"TSNeverKeyword\", arguments);\n}\n\nfunction tsNullKeyword() {\n  return _builder.default.apply(\"TSNullKeyword\", arguments);\n}\n\nfunction tsNumberKeyword() {\n  return _builder.default.apply(\"TSNumberKeyword\", arguments);\n}\n\nfunction tsObjectKeyword() {\n  return _builder.default.apply(\"TSObjectKeyword\", arguments);\n}\n\nfunction tsStringKeyword() {\n  return _builder.default.apply(\"TSStringKeyword\", arguments);\n}\n\nfunction tsSymbolKeyword() {\n  return _builder.default.apply(\"TSSymbolKeyword\", arguments);\n}\n\nfunction tsUndefinedKeyword() {\n  return _builder.default.apply(\"TSUndefinedKeyword\", arguments);\n}\n\nfunction tsUnknownKeyword() {\n  return _builder.default.apply(\"TSUnknownKeyword\", arguments);\n}\n\nfunction tsVoidKeyword() {\n  return _builder.default.apply(\"TSVoidKeyword\", arguments);\n}\n\nfunction tsThisType() {\n  return _builder.default.apply(\"TSThisType\", arguments);\n}\n\nfunction tsFunctionType(typeParameters, parameters, typeAnnotation) {\n  return _builder.default.apply(\"TSFunctionType\", arguments);\n}\n\nfunction tsConstructorType(typeParameters, parameters, typeAnnotation) {\n  return _builder.default.apply(\"TSConstructorType\", arguments);\n}\n\nfunction tsTypeReference(typeName, typeParameters) {\n  return _builder.default.apply(\"TSTypeReference\", arguments);\n}\n\nfunction tsTypePredicate(parameterName, typeAnnotation, asserts) {\n  return _builder.default.apply(\"TSTypePredicate\", arguments);\n}\n\nfunction tsTypeQuery(exprName) {\n  return _builder.default.apply(\"TSTypeQuery\", arguments);\n}\n\nfunction tsTypeLiteral(members) {\n  return _builder.default.apply(\"TSTypeLiteral\", arguments);\n}\n\nfunction tsArrayType(elementType) {\n  return _builder.default.apply(\"TSArrayType\", arguments);\n}\n\nfunction tsTupleType(elementTypes) {\n  return _builder.default.apply(\"TSTupleType\", arguments);\n}\n\nfunction tsOptionalType(typeAnnotation) {\n  return _builder.default.apply(\"TSOptionalType\", arguments);\n}\n\nfunction tsRestType(typeAnnotation) {\n  return _builder.default.apply(\"TSRestType\", arguments);\n}\n\nfunction tsNamedTupleMember(label, elementType, optional) {\n  return _builder.default.apply(\"TSNamedTupleMember\", arguments);\n}\n\nfunction tsUnionType(types) {\n  return _builder.default.apply(\"TSUnionType\", arguments);\n}\n\nfunction tsIntersectionType(types) {\n  return _builder.default.apply(\"TSIntersectionType\", arguments);\n}\n\nfunction tsConditionalType(checkType, extendsType, trueType, falseType) {\n  return _builder.default.apply(\"TSConditionalType\", arguments);\n}\n\nfunction tsInferType(typeParameter) {\n  return _builder.default.apply(\"TSInferType\", arguments);\n}\n\nfunction tsParenthesizedType(typeAnnotation) {\n  return _builder.default.apply(\"TSParenthesizedType\", arguments);\n}\n\nfunction tsTypeOperator(typeAnnotation) {\n  return _builder.default.apply(\"TSTypeOperator\", arguments);\n}\n\nfunction tsIndexedAccessType(objectType, indexType) {\n  return _builder.default.apply(\"TSIndexedAccessType\", arguments);\n}\n\nfunction tsMappedType(typeParameter, typeAnnotation, nameType) {\n  return _builder.default.apply(\"TSMappedType\", arguments);\n}\n\nfunction tsLiteralType(literal) {\n  return _builder.default.apply(\"TSLiteralType\", arguments);\n}\n\nfunction tsExpressionWithTypeArguments(expression, typeParameters) {\n  return _builder.default.apply(\"TSExpressionWithTypeArguments\", arguments);\n}\n\nfunction tsInterfaceDeclaration(id, typeParameters, _extends, body) {\n  return _builder.default.apply(\"TSInterfaceDeclaration\", arguments);\n}\n\nfunction tsInterfaceBody(body) {\n  return _builder.default.apply(\"TSInterfaceBody\", arguments);\n}\n\nfunction tsTypeAliasDeclaration(id, typeParameters, typeAnnotation) {\n  return _builder.default.apply(\"TSTypeAliasDeclaration\", arguments);\n}\n\nfunction tsAsExpression(expression, typeAnnotation) {\n  return _builder.default.apply(\"TSAsExpression\", arguments);\n}\n\nfunction tsTypeAssertion(typeAnnotation, expression) {\n  return _builder.default.apply(\"TSTypeAssertion\", arguments);\n}\n\nfunction tsEnumDeclaration(id, members) {\n  return _builder.default.apply(\"TSEnumDeclaration\", arguments);\n}\n\nfunction tsEnumMember(id, initializer) {\n  return _builder.default.apply(\"TSEnumMember\", arguments);\n}\n\nfunction tsModuleDeclaration(id, body) {\n  return _builder.default.apply(\"TSModuleDeclaration\", arguments);\n}\n\nfunction tsModuleBlock(body) {\n  return _builder.default.apply(\"TSModuleBlock\", arguments);\n}\n\nfunction tsImportType(argument, qualifier, typeParameters) {\n  return _builder.default.apply(\"TSImportType\", arguments);\n}\n\nfunction tsImportEqualsDeclaration(id, moduleReference) {\n  return _builder.default.apply(\"TSImportEqualsDeclaration\", arguments);\n}\n\nfunction tsExternalModuleReference(expression) {\n  return _builder.default.apply(\"TSExternalModuleReference\", arguments);\n}\n\nfunction tsNonNullExpression(expression) {\n  return _builder.default.apply(\"TSNonNullExpression\", arguments);\n}\n\nfunction tsExportAssignment(expression) {\n  return _builder.default.apply(\"TSExportAssignment\", arguments);\n}\n\nfunction tsNamespaceExportDeclaration(id) {\n  return _builder.default.apply(\"TSNamespaceExportDeclaration\", arguments);\n}\n\nfunction tsTypeAnnotation(typeAnnotation) {\n  return _builder.default.apply(\"TSTypeAnnotation\", arguments);\n}\n\nfunction tsTypeParameterInstantiation(params) {\n  return _builder.default.apply(\"TSTypeParameterInstantiation\", arguments);\n}\n\nfunction tsTypeParameterDeclaration(params) {\n  return _builder.default.apply(\"TSTypeParameterDeclaration\", arguments);\n}\n\nfunction tsTypeParameter(constraint, _default, name) {\n  return _builder.default.apply(\"TSTypeParameter\", arguments);\n}\n\nfunction NumberLiteral(value) {\n  console.trace(\"The node type NumberLiteral has been renamed to NumericLiteral\");\n  return _builder.default.apply(\"NumberLiteral\", arguments);\n}\n\nfunction RegexLiteral(pattern, flags) {\n  console.trace(\"The node type RegexLiteral has been renamed to RegExpLiteral\");\n  return _builder.default.apply(\"RegexLiteral\", arguments);\n}\n\nfunction RestProperty(argument) {\n  console.trace(\"The node type RestProperty has been renamed to RestElement\");\n  return _builder.default.apply(\"RestProperty\", arguments);\n}\n\nfunction SpreadProperty(argument) {\n  console.trace(\"The node type SpreadProperty has been renamed to SpreadElement\");\n  return _builder.default.apply(\"SpreadProperty\", arguments);\n}","map":{"version":3,"sources":["/Volumes/Nana/I_T/projects_code/react/Repos/scandiwebo/node_modules/@babel/types/lib/builders/generated/index.js"],"names":["Object","defineProperty","exports","value","anyTypeAnnotation","argumentPlaceholder","arrayExpression","arrayPattern","arrayTypeAnnotation","arrowFunctionExpression","assignmentExpression","assignmentPattern","awaitExpression","bigIntLiteral","binaryExpression","bindExpression","blockStatement","booleanLiteral","booleanLiteralTypeAnnotation","booleanTypeAnnotation","breakStatement","callExpression","catchClause","classAccessorProperty","classBody","classDeclaration","classExpression","classImplements","classMethod","classPrivateMethod","classPrivateProperty","classProperty","conditionalExpression","continueStatement","debuggerStatement","decimalLiteral","declareClass","declareExportAllDeclaration","declareExportDeclaration","declareFunction","declareInterface","declareModule","declareModuleExports","declareOpaqueType","declareTypeAlias","declareVariable","declaredPredicate","decorator","directive","directiveLiteral","doExpression","doWhileStatement","emptyStatement","emptyTypeAnnotation","enumBooleanBody","enumBooleanMember","enumDeclaration","enumDefaultedMember","enumNumberBody","enumNumberMember","enumStringBody","enumStringMember","enumSymbolBody","existsTypeAnnotation","exportAllDeclaration","exportDefaultDeclaration","exportDefaultSpecifier","exportNamedDeclaration","exportNamespaceSpecifier","exportSpecifier","expressionStatement","file","forInStatement","forOfStatement","forStatement","functionDeclaration","functionExpression","functionTypeAnnotation","functionTypeParam","genericTypeAnnotation","identifier","ifStatement","import","_import","importAttribute","importDeclaration","importDefaultSpecifier","importNamespaceSpecifier","importSpecifier","indexedAccessType","inferredPredicate","interfaceDeclaration","interfaceExtends","interfaceTypeAnnotation","interpreterDirective","intersectionTypeAnnotation","jSXAttribute","jsxAttribute","jSXClosingElement","jsxClosingElement","jSXClosingFragment","jsxClosingFragment","jSXElement","jsxElement","jSXEmptyExpression","jsxEmptyExpression","jSXExpressionContainer","jsxExpressionContainer","jSXFragment","jsxFragment","jSXIdentifier","jsxIdentifier","jSXMemberExpression","jsxMemberExpression","jSXNamespacedName","jsxNamespacedName","jSXOpeningElement","jsxOpeningElement","jSXOpeningFragment","jsxOpeningFragment","jSXSpreadAttribute","jsxSpreadAttribute","jSXSpreadChild","jsxSpreadChild","jSXText","jsxText","labeledStatement","logicalExpression","memberExpression","metaProperty","mixedTypeAnnotation","moduleExpression","newExpression","noop","nullLiteral","nullLiteralTypeAnnotation","nullableTypeAnnotation","numberLiteral","NumberLiteral","numberLiteralTypeAnnotation","numberTypeAnnotation","numericLiteral","objectExpression","objectMethod","objectPattern","objectProperty","objectTypeAnnotation","objectTypeCallProperty","objectTypeIndexer","objectTypeInternalSlot","objectTypeProperty","objectTypeSpreadProperty","opaqueType","optionalCallExpression","optionalIndexedAccessType","optionalMemberExpression","parenthesizedExpression","pipelineBareFunction","pipelinePrimaryTopicReference","pipelineTopicExpression","placeholder","privateName","program","qualifiedTypeIdentifier","recordExpression","regExpLiteral","regexLiteral","RegexLiteral","restElement","restProperty","RestProperty","returnStatement","sequenceExpression","spreadElement","spreadProperty","SpreadProperty","staticBlock","stringLiteral","stringLiteralTypeAnnotation","stringTypeAnnotation","super","_super","switchCase","switchStatement","symbolTypeAnnotation","taggedTemplateExpression","templateElement","templateLiteral","thisExpression","thisTypeAnnotation","throwStatement","topicReference","tryStatement","tSAnyKeyword","tsAnyKeyword","tSArrayType","tsArrayType","tSAsExpression","tsAsExpression","tSBigIntKeyword","tsBigIntKeyword","tSBooleanKeyword","tsBooleanKeyword","tSCallSignatureDeclaration","tsCallSignatureDeclaration","tSConditionalType","tsConditionalType","tSConstructSignatureDeclaration","tsConstructSignatureDeclaration","tSConstructorType","tsConstructorType","tSDeclareFunction","tsDeclareFunction","tSDeclareMethod","tsDeclareMethod","tSEnumDeclaration","tsEnumDeclaration","tSEnumMember","tsEnumMember","tSExportAssignment","tsExportAssignment","tSExpressionWithTypeArguments","tsExpressionWithTypeArguments","tSExternalModuleReference","tsExternalModuleReference","tSFunctionType","tsFunctionType","tSImportEqualsDeclaration","tsImportEqualsDeclaration","tSImportType","tsImportType","tSIndexSignature","tsIndexSignature","tSIndexedAccessType","tsIndexedAccessType","tSInferType","tsInferType","tSInterfaceBody","tsInterfaceBody","tSInterfaceDeclaration","tsInterfaceDeclaration","tSIntersectionType","tsIntersectionType","tSIntrinsicKeyword","tsIntrinsicKeyword","tSLiteralType","tsLiteralType","tSMappedType","tsMappedType","tSMethodSignature","tsMethodSignature","tSModuleBlock","tsModuleBlock","tSModuleDeclaration","tsModuleDeclaration","tSNamedTupleMember","tsNamedTupleMember","tSNamespaceExportDeclaration","tsNamespaceExportDeclaration","tSNeverKeyword","tsNeverKeyword","tSNonNullExpression","tsNonNullExpression","tSNullKeyword","tsNullKeyword","tSNumberKeyword","tsNumberKeyword","tSObjectKeyword","tsObjectKeyword","tSOptionalType","tsOptionalType","tSParameterProperty","tsParameterProperty","tSParenthesizedType","tsParenthesizedType","tSPropertySignature","tsPropertySignature","tSQualifiedName","tsQualifiedName","tSRestType","tsRestType","tSStringKeyword","tsStringKeyword","tSSymbolKeyword","tsSymbolKeyword","tSThisType","tsThisType","tSTupleType","tsTupleType","tSTypeAliasDeclaration","tsTypeAliasDeclaration","tSTypeAnnotation","tsTypeAnnotation","tSTypeAssertion","tsTypeAssertion","tSTypeLiteral","tsTypeLiteral","tSTypeOperator","tsTypeOperator","tSTypeParameter","tsTypeParameter","tSTypeParameterDeclaration","tsTypeParameterDeclaration","tSTypeParameterInstantiation","tsTypeParameterInstantiation","tSTypePredicate","tsTypePredicate","tSTypeQuery","tsTypeQuery","tSTypeReference","tsTypeReference","tSUndefinedKeyword","tsUndefinedKeyword","tSUnionType","tsUnionType","tSUnknownKeyword","tsUnknownKeyword","tSVoidKeyword","tsVoidKeyword","tupleExpression","tupleTypeAnnotation","typeAlias","typeAnnotation","typeCastExpression","typeParameter","typeParameterDeclaration","typeParameterInstantiation","typeofTypeAnnotation","unaryExpression","unionTypeAnnotation","updateExpression","v8IntrinsicIdentifier","variableDeclaration","variableDeclarator","variance","voidTypeAnnotation","whileStatement","withStatement","yieldExpression","_builder","require","elements","default","apply","arguments","operator","left","right","body","directives","label","callee","_arguments","param","test","consequent","alternate","expression","comments","tokens","init","update","id","params","generator","async","name","pattern","flags","object","property","computed","optional","sourceType","interpreter","properties","kind","key","shorthand","decorators","argument","expressions","discriminant","cases","block","handler","finalizer","prefix","declarations","superClass","source","declaration","specifiers","local","exported","_await","imported","meta","_static","tag","quasi","tail","quasis","delegate","elementType","typeParameters","_extends","supertype","rest","returnType","types","indexers","callProperties","internalSlots","exact","method","impltype","qualification","bound","_default","members","objectType","indexType","openingElement","closingElement","children","selfClosing","namespace","attributes","openingFragment","closingFragment","expectedNode","parameter","parameters","initializer","typeName","parameterName","asserts","exprName","elementTypes","checkType","extendsType","trueType","falseType","nameType","literal","qualifier","moduleReference","constraint","console","trace"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.anyTypeAnnotation = anyTypeAnnotation;\nexports.argumentPlaceholder = argumentPlaceholder;\nexports.arrayExpression = arrayExpression;\nexports.arrayPattern = arrayPattern;\nexports.arrayTypeAnnotation = arrayTypeAnnotation;\nexports.arrowFunctionExpression = arrowFunctionExpression;\nexports.assignmentExpression = assignmentExpression;\nexports.assignmentPattern = assignmentPattern;\nexports.awaitExpression = awaitExpression;\nexports.bigIntLiteral = bigIntLiteral;\nexports.binaryExpression = binaryExpression;\nexports.bindExpression = bindExpression;\nexports.blockStatement = blockStatement;\nexports.booleanLiteral = booleanLiteral;\nexports.booleanLiteralTypeAnnotation = booleanLiteralTypeAnnotation;\nexports.booleanTypeAnnotation = booleanTypeAnnotation;\nexports.breakStatement = breakStatement;\nexports.callExpression = callExpression;\nexports.catchClause = catchClause;\nexports.classAccessorProperty = classAccessorProperty;\nexports.classBody = classBody;\nexports.classDeclaration = classDeclaration;\nexports.classExpression = classExpression;\nexports.classImplements = classImplements;\nexports.classMethod = classMethod;\nexports.classPrivateMethod = classPrivateMethod;\nexports.classPrivateProperty = classPrivateProperty;\nexports.classProperty = classProperty;\nexports.conditionalExpression = conditionalExpression;\nexports.continueStatement = continueStatement;\nexports.debuggerStatement = debuggerStatement;\nexports.decimalLiteral = decimalLiteral;\nexports.declareClass = declareClass;\nexports.declareExportAllDeclaration = declareExportAllDeclaration;\nexports.declareExportDeclaration = declareExportDeclaration;\nexports.declareFunction = declareFunction;\nexports.declareInterface = declareInterface;\nexports.declareModule = declareModule;\nexports.declareModuleExports = declareModuleExports;\nexports.declareOpaqueType = declareOpaqueType;\nexports.declareTypeAlias = declareTypeAlias;\nexports.declareVariable = declareVariable;\nexports.declaredPredicate = declaredPredicate;\nexports.decorator = decorator;\nexports.directive = directive;\nexports.directiveLiteral = directiveLiteral;\nexports.doExpression = doExpression;\nexports.doWhileStatement = doWhileStatement;\nexports.emptyStatement = emptyStatement;\nexports.emptyTypeAnnotation = emptyTypeAnnotation;\nexports.enumBooleanBody = enumBooleanBody;\nexports.enumBooleanMember = enumBooleanMember;\nexports.enumDeclaration = enumDeclaration;\nexports.enumDefaultedMember = enumDefaultedMember;\nexports.enumNumberBody = enumNumberBody;\nexports.enumNumberMember = enumNumberMember;\nexports.enumStringBody = enumStringBody;\nexports.enumStringMember = enumStringMember;\nexports.enumSymbolBody = enumSymbolBody;\nexports.existsTypeAnnotation = existsTypeAnnotation;\nexports.exportAllDeclaration = exportAllDeclaration;\nexports.exportDefaultDeclaration = exportDefaultDeclaration;\nexports.exportDefaultSpecifier = exportDefaultSpecifier;\nexports.exportNamedDeclaration = exportNamedDeclaration;\nexports.exportNamespaceSpecifier = exportNamespaceSpecifier;\nexports.exportSpecifier = exportSpecifier;\nexports.expressionStatement = expressionStatement;\nexports.file = file;\nexports.forInStatement = forInStatement;\nexports.forOfStatement = forOfStatement;\nexports.forStatement = forStatement;\nexports.functionDeclaration = functionDeclaration;\nexports.functionExpression = functionExpression;\nexports.functionTypeAnnotation = functionTypeAnnotation;\nexports.functionTypeParam = functionTypeParam;\nexports.genericTypeAnnotation = genericTypeAnnotation;\nexports.identifier = identifier;\nexports.ifStatement = ifStatement;\nexports.import = _import;\nexports.importAttribute = importAttribute;\nexports.importDeclaration = importDeclaration;\nexports.importDefaultSpecifier = importDefaultSpecifier;\nexports.importNamespaceSpecifier = importNamespaceSpecifier;\nexports.importSpecifier = importSpecifier;\nexports.indexedAccessType = indexedAccessType;\nexports.inferredPredicate = inferredPredicate;\nexports.interfaceDeclaration = interfaceDeclaration;\nexports.interfaceExtends = interfaceExtends;\nexports.interfaceTypeAnnotation = interfaceTypeAnnotation;\nexports.interpreterDirective = interpreterDirective;\nexports.intersectionTypeAnnotation = intersectionTypeAnnotation;\nexports.jSXAttribute = exports.jsxAttribute = jsxAttribute;\nexports.jSXClosingElement = exports.jsxClosingElement = jsxClosingElement;\nexports.jSXClosingFragment = exports.jsxClosingFragment = jsxClosingFragment;\nexports.jSXElement = exports.jsxElement = jsxElement;\nexports.jSXEmptyExpression = exports.jsxEmptyExpression = jsxEmptyExpression;\nexports.jSXExpressionContainer = exports.jsxExpressionContainer = jsxExpressionContainer;\nexports.jSXFragment = exports.jsxFragment = jsxFragment;\nexports.jSXIdentifier = exports.jsxIdentifier = jsxIdentifier;\nexports.jSXMemberExpression = exports.jsxMemberExpression = jsxMemberExpression;\nexports.jSXNamespacedName = exports.jsxNamespacedName = jsxNamespacedName;\nexports.jSXOpeningElement = exports.jsxOpeningElement = jsxOpeningElement;\nexports.jSXOpeningFragment = exports.jsxOpeningFragment = jsxOpeningFragment;\nexports.jSXSpreadAttribute = exports.jsxSpreadAttribute = jsxSpreadAttribute;\nexports.jSXSpreadChild = exports.jsxSpreadChild = jsxSpreadChild;\nexports.jSXText = exports.jsxText = jsxText;\nexports.labeledStatement = labeledStatement;\nexports.logicalExpression = logicalExpression;\nexports.memberExpression = memberExpression;\nexports.metaProperty = metaProperty;\nexports.mixedTypeAnnotation = mixedTypeAnnotation;\nexports.moduleExpression = moduleExpression;\nexports.newExpression = newExpression;\nexports.noop = noop;\nexports.nullLiteral = nullLiteral;\nexports.nullLiteralTypeAnnotation = nullLiteralTypeAnnotation;\nexports.nullableTypeAnnotation = nullableTypeAnnotation;\nexports.numberLiteral = NumberLiteral;\nexports.numberLiteralTypeAnnotation = numberLiteralTypeAnnotation;\nexports.numberTypeAnnotation = numberTypeAnnotation;\nexports.numericLiteral = numericLiteral;\nexports.objectExpression = objectExpression;\nexports.objectMethod = objectMethod;\nexports.objectPattern = objectPattern;\nexports.objectProperty = objectProperty;\nexports.objectTypeAnnotation = objectTypeAnnotation;\nexports.objectTypeCallProperty = objectTypeCallProperty;\nexports.objectTypeIndexer = objectTypeIndexer;\nexports.objectTypeInternalSlot = objectTypeInternalSlot;\nexports.objectTypeProperty = objectTypeProperty;\nexports.objectTypeSpreadProperty = objectTypeSpreadProperty;\nexports.opaqueType = opaqueType;\nexports.optionalCallExpression = optionalCallExpression;\nexports.optionalIndexedAccessType = optionalIndexedAccessType;\nexports.optionalMemberExpression = optionalMemberExpression;\nexports.parenthesizedExpression = parenthesizedExpression;\nexports.pipelineBareFunction = pipelineBareFunction;\nexports.pipelinePrimaryTopicReference = pipelinePrimaryTopicReference;\nexports.pipelineTopicExpression = pipelineTopicExpression;\nexports.placeholder = placeholder;\nexports.privateName = privateName;\nexports.program = program;\nexports.qualifiedTypeIdentifier = qualifiedTypeIdentifier;\nexports.recordExpression = recordExpression;\nexports.regExpLiteral = regExpLiteral;\nexports.regexLiteral = RegexLiteral;\nexports.restElement = restElement;\nexports.restProperty = RestProperty;\nexports.returnStatement = returnStatement;\nexports.sequenceExpression = sequenceExpression;\nexports.spreadElement = spreadElement;\nexports.spreadProperty = SpreadProperty;\nexports.staticBlock = staticBlock;\nexports.stringLiteral = stringLiteral;\nexports.stringLiteralTypeAnnotation = stringLiteralTypeAnnotation;\nexports.stringTypeAnnotation = stringTypeAnnotation;\nexports.super = _super;\nexports.switchCase = switchCase;\nexports.switchStatement = switchStatement;\nexports.symbolTypeAnnotation = symbolTypeAnnotation;\nexports.taggedTemplateExpression = taggedTemplateExpression;\nexports.templateElement = templateElement;\nexports.templateLiteral = templateLiteral;\nexports.thisExpression = thisExpression;\nexports.thisTypeAnnotation = thisTypeAnnotation;\nexports.throwStatement = throwStatement;\nexports.topicReference = topicReference;\nexports.tryStatement = tryStatement;\nexports.tSAnyKeyword = exports.tsAnyKeyword = tsAnyKeyword;\nexports.tSArrayType = exports.tsArrayType = tsArrayType;\nexports.tSAsExpression = exports.tsAsExpression = tsAsExpression;\nexports.tSBigIntKeyword = exports.tsBigIntKeyword = tsBigIntKeyword;\nexports.tSBooleanKeyword = exports.tsBooleanKeyword = tsBooleanKeyword;\nexports.tSCallSignatureDeclaration = exports.tsCallSignatureDeclaration = tsCallSignatureDeclaration;\nexports.tSConditionalType = exports.tsConditionalType = tsConditionalType;\nexports.tSConstructSignatureDeclaration = exports.tsConstructSignatureDeclaration = tsConstructSignatureDeclaration;\nexports.tSConstructorType = exports.tsConstructorType = tsConstructorType;\nexports.tSDeclareFunction = exports.tsDeclareFunction = tsDeclareFunction;\nexports.tSDeclareMethod = exports.tsDeclareMethod = tsDeclareMethod;\nexports.tSEnumDeclaration = exports.tsEnumDeclaration = tsEnumDeclaration;\nexports.tSEnumMember = exports.tsEnumMember = tsEnumMember;\nexports.tSExportAssignment = exports.tsExportAssignment = tsExportAssignment;\nexports.tSExpressionWithTypeArguments = exports.tsExpressionWithTypeArguments = tsExpressionWithTypeArguments;\nexports.tSExternalModuleReference = exports.tsExternalModuleReference = tsExternalModuleReference;\nexports.tSFunctionType = exports.tsFunctionType = tsFunctionType;\nexports.tSImportEqualsDeclaration = exports.tsImportEqualsDeclaration = tsImportEqualsDeclaration;\nexports.tSImportType = exports.tsImportType = tsImportType;\nexports.tSIndexSignature = exports.tsIndexSignature = tsIndexSignature;\nexports.tSIndexedAccessType = exports.tsIndexedAccessType = tsIndexedAccessType;\nexports.tSInferType = exports.tsInferType = tsInferType;\nexports.tSInterfaceBody = exports.tsInterfaceBody = tsInterfaceBody;\nexports.tSInterfaceDeclaration = exports.tsInterfaceDeclaration = tsInterfaceDeclaration;\nexports.tSIntersectionType = exports.tsIntersectionType = tsIntersectionType;\nexports.tSIntrinsicKeyword = exports.tsIntrinsicKeyword = tsIntrinsicKeyword;\nexports.tSLiteralType = exports.tsLiteralType = tsLiteralType;\nexports.tSMappedType = exports.tsMappedType = tsMappedType;\nexports.tSMethodSignature = exports.tsMethodSignature = tsMethodSignature;\nexports.tSModuleBlock = exports.tsModuleBlock = tsModuleBlock;\nexports.tSModuleDeclaration = exports.tsModuleDeclaration = tsModuleDeclaration;\nexports.tSNamedTupleMember = exports.tsNamedTupleMember = tsNamedTupleMember;\nexports.tSNamespaceExportDeclaration = exports.tsNamespaceExportDeclaration = tsNamespaceExportDeclaration;\nexports.tSNeverKeyword = exports.tsNeverKeyword = tsNeverKeyword;\nexports.tSNonNullExpression = exports.tsNonNullExpression = tsNonNullExpression;\nexports.tSNullKeyword = exports.tsNullKeyword = tsNullKeyword;\nexports.tSNumberKeyword = exports.tsNumberKeyword = tsNumberKeyword;\nexports.tSObjectKeyword = exports.tsObjectKeyword = tsObjectKeyword;\nexports.tSOptionalType = exports.tsOptionalType = tsOptionalType;\nexports.tSParameterProperty = exports.tsParameterProperty = tsParameterProperty;\nexports.tSParenthesizedType = exports.tsParenthesizedType = tsParenthesizedType;\nexports.tSPropertySignature = exports.tsPropertySignature = tsPropertySignature;\nexports.tSQualifiedName = exports.tsQualifiedName = tsQualifiedName;\nexports.tSRestType = exports.tsRestType = tsRestType;\nexports.tSStringKeyword = exports.tsStringKeyword = tsStringKeyword;\nexports.tSSymbolKeyword = exports.tsSymbolKeyword = tsSymbolKeyword;\nexports.tSThisType = exports.tsThisType = tsThisType;\nexports.tSTupleType = exports.tsTupleType = tsTupleType;\nexports.tSTypeAliasDeclaration = exports.tsTypeAliasDeclaration = tsTypeAliasDeclaration;\nexports.tSTypeAnnotation = exports.tsTypeAnnotation = tsTypeAnnotation;\nexports.tSTypeAssertion = exports.tsTypeAssertion = tsTypeAssertion;\nexports.tSTypeLiteral = exports.tsTypeLiteral = tsTypeLiteral;\nexports.tSTypeOperator = exports.tsTypeOperator = tsTypeOperator;\nexports.tSTypeParameter = exports.tsTypeParameter = tsTypeParameter;\nexports.tSTypeParameterDeclaration = exports.tsTypeParameterDeclaration = tsTypeParameterDeclaration;\nexports.tSTypeParameterInstantiation = exports.tsTypeParameterInstantiation = tsTypeParameterInstantiation;\nexports.tSTypePredicate = exports.tsTypePredicate = tsTypePredicate;\nexports.tSTypeQuery = exports.tsTypeQuery = tsTypeQuery;\nexports.tSTypeReference = exports.tsTypeReference = tsTypeReference;\nexports.tSUndefinedKeyword = exports.tsUndefinedKeyword = tsUndefinedKeyword;\nexports.tSUnionType = exports.tsUnionType = tsUnionType;\nexports.tSUnknownKeyword = exports.tsUnknownKeyword = tsUnknownKeyword;\nexports.tSVoidKeyword = exports.tsVoidKeyword = tsVoidKeyword;\nexports.tupleExpression = tupleExpression;\nexports.tupleTypeAnnotation = tupleTypeAnnotation;\nexports.typeAlias = typeAlias;\nexports.typeAnnotation = typeAnnotation;\nexports.typeCastExpression = typeCastExpression;\nexports.typeParameter = typeParameter;\nexports.typeParameterDeclaration = typeParameterDeclaration;\nexports.typeParameterInstantiation = typeParameterInstantiation;\nexports.typeofTypeAnnotation = typeofTypeAnnotation;\nexports.unaryExpression = unaryExpression;\nexports.unionTypeAnnotation = unionTypeAnnotation;\nexports.updateExpression = updateExpression;\nexports.v8IntrinsicIdentifier = v8IntrinsicIdentifier;\nexports.variableDeclaration = variableDeclaration;\nexports.variableDeclarator = variableDeclarator;\nexports.variance = variance;\nexports.voidTypeAnnotation = voidTypeAnnotation;\nexports.whileStatement = whileStatement;\nexports.withStatement = withStatement;\nexports.yieldExpression = yieldExpression;\n\nvar _builder = require(\"../builder\");\n\nfunction arrayExpression(elements) {\n  return _builder.default.apply(\"ArrayExpression\", arguments);\n}\n\nfunction assignmentExpression(operator, left, right) {\n  return _builder.default.apply(\"AssignmentExpression\", arguments);\n}\n\nfunction binaryExpression(operator, left, right) {\n  return _builder.default.apply(\"BinaryExpression\", arguments);\n}\n\nfunction interpreterDirective(value) {\n  return _builder.default.apply(\"InterpreterDirective\", arguments);\n}\n\nfunction directive(value) {\n  return _builder.default.apply(\"Directive\", arguments);\n}\n\nfunction directiveLiteral(value) {\n  return _builder.default.apply(\"DirectiveLiteral\", arguments);\n}\n\nfunction blockStatement(body, directives) {\n  return _builder.default.apply(\"BlockStatement\", arguments);\n}\n\nfunction breakStatement(label) {\n  return _builder.default.apply(\"BreakStatement\", arguments);\n}\n\nfunction callExpression(callee, _arguments) {\n  return _builder.default.apply(\"CallExpression\", arguments);\n}\n\nfunction catchClause(param, body) {\n  return _builder.default.apply(\"CatchClause\", arguments);\n}\n\nfunction conditionalExpression(test, consequent, alternate) {\n  return _builder.default.apply(\"ConditionalExpression\", arguments);\n}\n\nfunction continueStatement(label) {\n  return _builder.default.apply(\"ContinueStatement\", arguments);\n}\n\nfunction debuggerStatement() {\n  return _builder.default.apply(\"DebuggerStatement\", arguments);\n}\n\nfunction doWhileStatement(test, body) {\n  return _builder.default.apply(\"DoWhileStatement\", arguments);\n}\n\nfunction emptyStatement() {\n  return _builder.default.apply(\"EmptyStatement\", arguments);\n}\n\nfunction expressionStatement(expression) {\n  return _builder.default.apply(\"ExpressionStatement\", arguments);\n}\n\nfunction file(program, comments, tokens) {\n  return _builder.default.apply(\"File\", arguments);\n}\n\nfunction forInStatement(left, right, body) {\n  return _builder.default.apply(\"ForInStatement\", arguments);\n}\n\nfunction forStatement(init, test, update, body) {\n  return _builder.default.apply(\"ForStatement\", arguments);\n}\n\nfunction functionDeclaration(id, params, body, generator, async) {\n  return _builder.default.apply(\"FunctionDeclaration\", arguments);\n}\n\nfunction functionExpression(id, params, body, generator, async) {\n  return _builder.default.apply(\"FunctionExpression\", arguments);\n}\n\nfunction identifier(name) {\n  return _builder.default.apply(\"Identifier\", arguments);\n}\n\nfunction ifStatement(test, consequent, alternate) {\n  return _builder.default.apply(\"IfStatement\", arguments);\n}\n\nfunction labeledStatement(label, body) {\n  return _builder.default.apply(\"LabeledStatement\", arguments);\n}\n\nfunction stringLiteral(value) {\n  return _builder.default.apply(\"StringLiteral\", arguments);\n}\n\nfunction numericLiteral(value) {\n  return _builder.default.apply(\"NumericLiteral\", arguments);\n}\n\nfunction nullLiteral() {\n  return _builder.default.apply(\"NullLiteral\", arguments);\n}\n\nfunction booleanLiteral(value) {\n  return _builder.default.apply(\"BooleanLiteral\", arguments);\n}\n\nfunction regExpLiteral(pattern, flags) {\n  return _builder.default.apply(\"RegExpLiteral\", arguments);\n}\n\nfunction logicalExpression(operator, left, right) {\n  return _builder.default.apply(\"LogicalExpression\", arguments);\n}\n\nfunction memberExpression(object, property, computed, optional) {\n  return _builder.default.apply(\"MemberExpression\", arguments);\n}\n\nfunction newExpression(callee, _arguments) {\n  return _builder.default.apply(\"NewExpression\", arguments);\n}\n\nfunction program(body, directives, sourceType, interpreter) {\n  return _builder.default.apply(\"Program\", arguments);\n}\n\nfunction objectExpression(properties) {\n  return _builder.default.apply(\"ObjectExpression\", arguments);\n}\n\nfunction objectMethod(kind, key, params, body, computed, generator, async) {\n  return _builder.default.apply(\"ObjectMethod\", arguments);\n}\n\nfunction objectProperty(key, value, computed, shorthand, decorators) {\n  return _builder.default.apply(\"ObjectProperty\", arguments);\n}\n\nfunction restElement(argument) {\n  return _builder.default.apply(\"RestElement\", arguments);\n}\n\nfunction returnStatement(argument) {\n  return _builder.default.apply(\"ReturnStatement\", arguments);\n}\n\nfunction sequenceExpression(expressions) {\n  return _builder.default.apply(\"SequenceExpression\", arguments);\n}\n\nfunction parenthesizedExpression(expression) {\n  return _builder.default.apply(\"ParenthesizedExpression\", arguments);\n}\n\nfunction switchCase(test, consequent) {\n  return _builder.default.apply(\"SwitchCase\", arguments);\n}\n\nfunction switchStatement(discriminant, cases) {\n  return _builder.default.apply(\"SwitchStatement\", arguments);\n}\n\nfunction thisExpression() {\n  return _builder.default.apply(\"ThisExpression\", arguments);\n}\n\nfunction throwStatement(argument) {\n  return _builder.default.apply(\"ThrowStatement\", arguments);\n}\n\nfunction tryStatement(block, handler, finalizer) {\n  return _builder.default.apply(\"TryStatement\", arguments);\n}\n\nfunction unaryExpression(operator, argument, prefix) {\n  return _builder.default.apply(\"UnaryExpression\", arguments);\n}\n\nfunction updateExpression(operator, argument, prefix) {\n  return _builder.default.apply(\"UpdateExpression\", arguments);\n}\n\nfunction variableDeclaration(kind, declarations) {\n  return _builder.default.apply(\"VariableDeclaration\", arguments);\n}\n\nfunction variableDeclarator(id, init) {\n  return _builder.default.apply(\"VariableDeclarator\", arguments);\n}\n\nfunction whileStatement(test, body) {\n  return _builder.default.apply(\"WhileStatement\", arguments);\n}\n\nfunction withStatement(object, body) {\n  return _builder.default.apply(\"WithStatement\", arguments);\n}\n\nfunction assignmentPattern(left, right) {\n  return _builder.default.apply(\"AssignmentPattern\", arguments);\n}\n\nfunction arrayPattern(elements) {\n  return _builder.default.apply(\"ArrayPattern\", arguments);\n}\n\nfunction arrowFunctionExpression(params, body, async) {\n  return _builder.default.apply(\"ArrowFunctionExpression\", arguments);\n}\n\nfunction classBody(body) {\n  return _builder.default.apply(\"ClassBody\", arguments);\n}\n\nfunction classExpression(id, superClass, body, decorators) {\n  return _builder.default.apply(\"ClassExpression\", arguments);\n}\n\nfunction classDeclaration(id, superClass, body, decorators) {\n  return _builder.default.apply(\"ClassDeclaration\", arguments);\n}\n\nfunction exportAllDeclaration(source) {\n  return _builder.default.apply(\"ExportAllDeclaration\", arguments);\n}\n\nfunction exportDefaultDeclaration(declaration) {\n  return _builder.default.apply(\"ExportDefaultDeclaration\", arguments);\n}\n\nfunction exportNamedDeclaration(declaration, specifiers, source) {\n  return _builder.default.apply(\"ExportNamedDeclaration\", arguments);\n}\n\nfunction exportSpecifier(local, exported) {\n  return _builder.default.apply(\"ExportSpecifier\", arguments);\n}\n\nfunction forOfStatement(left, right, body, _await) {\n  return _builder.default.apply(\"ForOfStatement\", arguments);\n}\n\nfunction importDeclaration(specifiers, source) {\n  return _builder.default.apply(\"ImportDeclaration\", arguments);\n}\n\nfunction importDefaultSpecifier(local) {\n  return _builder.default.apply(\"ImportDefaultSpecifier\", arguments);\n}\n\nfunction importNamespaceSpecifier(local) {\n  return _builder.default.apply(\"ImportNamespaceSpecifier\", arguments);\n}\n\nfunction importSpecifier(local, imported) {\n  return _builder.default.apply(\"ImportSpecifier\", arguments);\n}\n\nfunction metaProperty(meta, property) {\n  return _builder.default.apply(\"MetaProperty\", arguments);\n}\n\nfunction classMethod(kind, key, params, body, computed, _static, generator, async) {\n  return _builder.default.apply(\"ClassMethod\", arguments);\n}\n\nfunction objectPattern(properties) {\n  return _builder.default.apply(\"ObjectPattern\", arguments);\n}\n\nfunction spreadElement(argument) {\n  return _builder.default.apply(\"SpreadElement\", arguments);\n}\n\nfunction _super() {\n  return _builder.default.apply(\"Super\", arguments);\n}\n\nfunction taggedTemplateExpression(tag, quasi) {\n  return _builder.default.apply(\"TaggedTemplateExpression\", arguments);\n}\n\nfunction templateElement(value, tail) {\n  return _builder.default.apply(\"TemplateElement\", arguments);\n}\n\nfunction templateLiteral(quasis, expressions) {\n  return _builder.default.apply(\"TemplateLiteral\", arguments);\n}\n\nfunction yieldExpression(argument, delegate) {\n  return _builder.default.apply(\"YieldExpression\", arguments);\n}\n\nfunction awaitExpression(argument) {\n  return _builder.default.apply(\"AwaitExpression\", arguments);\n}\n\nfunction _import() {\n  return _builder.default.apply(\"Import\", arguments);\n}\n\nfunction bigIntLiteral(value) {\n  return _builder.default.apply(\"BigIntLiteral\", arguments);\n}\n\nfunction exportNamespaceSpecifier(exported) {\n  return _builder.default.apply(\"ExportNamespaceSpecifier\", arguments);\n}\n\nfunction optionalMemberExpression(object, property, computed, optional) {\n  return _builder.default.apply(\"OptionalMemberExpression\", arguments);\n}\n\nfunction optionalCallExpression(callee, _arguments, optional) {\n  return _builder.default.apply(\"OptionalCallExpression\", arguments);\n}\n\nfunction classProperty(key, value, typeAnnotation, decorators, computed, _static) {\n  return _builder.default.apply(\"ClassProperty\", arguments);\n}\n\nfunction classAccessorProperty(key, value, typeAnnotation, decorators, computed, _static) {\n  return _builder.default.apply(\"ClassAccessorProperty\", arguments);\n}\n\nfunction classPrivateProperty(key, value, decorators, _static) {\n  return _builder.default.apply(\"ClassPrivateProperty\", arguments);\n}\n\nfunction classPrivateMethod(kind, key, params, body, _static) {\n  return _builder.default.apply(\"ClassPrivateMethod\", arguments);\n}\n\nfunction privateName(id) {\n  return _builder.default.apply(\"PrivateName\", arguments);\n}\n\nfunction staticBlock(body) {\n  return _builder.default.apply(\"StaticBlock\", arguments);\n}\n\nfunction anyTypeAnnotation() {\n  return _builder.default.apply(\"AnyTypeAnnotation\", arguments);\n}\n\nfunction arrayTypeAnnotation(elementType) {\n  return _builder.default.apply(\"ArrayTypeAnnotation\", arguments);\n}\n\nfunction booleanTypeAnnotation() {\n  return _builder.default.apply(\"BooleanTypeAnnotation\", arguments);\n}\n\nfunction booleanLiteralTypeAnnotation(value) {\n  return _builder.default.apply(\"BooleanLiteralTypeAnnotation\", arguments);\n}\n\nfunction nullLiteralTypeAnnotation() {\n  return _builder.default.apply(\"NullLiteralTypeAnnotation\", arguments);\n}\n\nfunction classImplements(id, typeParameters) {\n  return _builder.default.apply(\"ClassImplements\", arguments);\n}\n\nfunction declareClass(id, typeParameters, _extends, body) {\n  return _builder.default.apply(\"DeclareClass\", arguments);\n}\n\nfunction declareFunction(id) {\n  return _builder.default.apply(\"DeclareFunction\", arguments);\n}\n\nfunction declareInterface(id, typeParameters, _extends, body) {\n  return _builder.default.apply(\"DeclareInterface\", arguments);\n}\n\nfunction declareModule(id, body, kind) {\n  return _builder.default.apply(\"DeclareModule\", arguments);\n}\n\nfunction declareModuleExports(typeAnnotation) {\n  return _builder.default.apply(\"DeclareModuleExports\", arguments);\n}\n\nfunction declareTypeAlias(id, typeParameters, right) {\n  return _builder.default.apply(\"DeclareTypeAlias\", arguments);\n}\n\nfunction declareOpaqueType(id, typeParameters, supertype) {\n  return _builder.default.apply(\"DeclareOpaqueType\", arguments);\n}\n\nfunction declareVariable(id) {\n  return _builder.default.apply(\"DeclareVariable\", arguments);\n}\n\nfunction declareExportDeclaration(declaration, specifiers, source) {\n  return _builder.default.apply(\"DeclareExportDeclaration\", arguments);\n}\n\nfunction declareExportAllDeclaration(source) {\n  return _builder.default.apply(\"DeclareExportAllDeclaration\", arguments);\n}\n\nfunction declaredPredicate(value) {\n  return _builder.default.apply(\"DeclaredPredicate\", arguments);\n}\n\nfunction existsTypeAnnotation() {\n  return _builder.default.apply(\"ExistsTypeAnnotation\", arguments);\n}\n\nfunction functionTypeAnnotation(typeParameters, params, rest, returnType) {\n  return _builder.default.apply(\"FunctionTypeAnnotation\", arguments);\n}\n\nfunction functionTypeParam(name, typeAnnotation) {\n  return _builder.default.apply(\"FunctionTypeParam\", arguments);\n}\n\nfunction genericTypeAnnotation(id, typeParameters) {\n  return _builder.default.apply(\"GenericTypeAnnotation\", arguments);\n}\n\nfunction inferredPredicate() {\n  return _builder.default.apply(\"InferredPredicate\", arguments);\n}\n\nfunction interfaceExtends(id, typeParameters) {\n  return _builder.default.apply(\"InterfaceExtends\", arguments);\n}\n\nfunction interfaceDeclaration(id, typeParameters, _extends, body) {\n  return _builder.default.apply(\"InterfaceDeclaration\", arguments);\n}\n\nfunction interfaceTypeAnnotation(_extends, body) {\n  return _builder.default.apply(\"InterfaceTypeAnnotation\", arguments);\n}\n\nfunction intersectionTypeAnnotation(types) {\n  return _builder.default.apply(\"IntersectionTypeAnnotation\", arguments);\n}\n\nfunction mixedTypeAnnotation() {\n  return _builder.default.apply(\"MixedTypeAnnotation\", arguments);\n}\n\nfunction emptyTypeAnnotation() {\n  return _builder.default.apply(\"EmptyTypeAnnotation\", arguments);\n}\n\nfunction nullableTypeAnnotation(typeAnnotation) {\n  return _builder.default.apply(\"NullableTypeAnnotation\", arguments);\n}\n\nfunction numberLiteralTypeAnnotation(value) {\n  return _builder.default.apply(\"NumberLiteralTypeAnnotation\", arguments);\n}\n\nfunction numberTypeAnnotation() {\n  return _builder.default.apply(\"NumberTypeAnnotation\", arguments);\n}\n\nfunction objectTypeAnnotation(properties, indexers, callProperties, internalSlots, exact) {\n  return _builder.default.apply(\"ObjectTypeAnnotation\", arguments);\n}\n\nfunction objectTypeInternalSlot(id, value, optional, _static, method) {\n  return _builder.default.apply(\"ObjectTypeInternalSlot\", arguments);\n}\n\nfunction objectTypeCallProperty(value) {\n  return _builder.default.apply(\"ObjectTypeCallProperty\", arguments);\n}\n\nfunction objectTypeIndexer(id, key, value, variance) {\n  return _builder.default.apply(\"ObjectTypeIndexer\", arguments);\n}\n\nfunction objectTypeProperty(key, value, variance) {\n  return _builder.default.apply(\"ObjectTypeProperty\", arguments);\n}\n\nfunction objectTypeSpreadProperty(argument) {\n  return _builder.default.apply(\"ObjectTypeSpreadProperty\", arguments);\n}\n\nfunction opaqueType(id, typeParameters, supertype, impltype) {\n  return _builder.default.apply(\"OpaqueType\", arguments);\n}\n\nfunction qualifiedTypeIdentifier(id, qualification) {\n  return _builder.default.apply(\"QualifiedTypeIdentifier\", arguments);\n}\n\nfunction stringLiteralTypeAnnotation(value) {\n  return _builder.default.apply(\"StringLiteralTypeAnnotation\", arguments);\n}\n\nfunction stringTypeAnnotation() {\n  return _builder.default.apply(\"StringTypeAnnotation\", arguments);\n}\n\nfunction symbolTypeAnnotation() {\n  return _builder.default.apply(\"SymbolTypeAnnotation\", arguments);\n}\n\nfunction thisTypeAnnotation() {\n  return _builder.default.apply(\"ThisTypeAnnotation\", arguments);\n}\n\nfunction tupleTypeAnnotation(types) {\n  return _builder.default.apply(\"TupleTypeAnnotation\", arguments);\n}\n\nfunction typeofTypeAnnotation(argument) {\n  return _builder.default.apply(\"TypeofTypeAnnotation\", arguments);\n}\n\nfunction typeAlias(id, typeParameters, right) {\n  return _builder.default.apply(\"TypeAlias\", arguments);\n}\n\nfunction typeAnnotation(typeAnnotation) {\n  return _builder.default.apply(\"TypeAnnotation\", arguments);\n}\n\nfunction typeCastExpression(expression, typeAnnotation) {\n  return _builder.default.apply(\"TypeCastExpression\", arguments);\n}\n\nfunction typeParameter(bound, _default, variance) {\n  return _builder.default.apply(\"TypeParameter\", arguments);\n}\n\nfunction typeParameterDeclaration(params) {\n  return _builder.default.apply(\"TypeParameterDeclaration\", arguments);\n}\n\nfunction typeParameterInstantiation(params) {\n  return _builder.default.apply(\"TypeParameterInstantiation\", arguments);\n}\n\nfunction unionTypeAnnotation(types) {\n  return _builder.default.apply(\"UnionTypeAnnotation\", arguments);\n}\n\nfunction variance(kind) {\n  return _builder.default.apply(\"Variance\", arguments);\n}\n\nfunction voidTypeAnnotation() {\n  return _builder.default.apply(\"VoidTypeAnnotation\", arguments);\n}\n\nfunction enumDeclaration(id, body) {\n  return _builder.default.apply(\"EnumDeclaration\", arguments);\n}\n\nfunction enumBooleanBody(members) {\n  return _builder.default.apply(\"EnumBooleanBody\", arguments);\n}\n\nfunction enumNumberBody(members) {\n  return _builder.default.apply(\"EnumNumberBody\", arguments);\n}\n\nfunction enumStringBody(members) {\n  return _builder.default.apply(\"EnumStringBody\", arguments);\n}\n\nfunction enumSymbolBody(members) {\n  return _builder.default.apply(\"EnumSymbolBody\", arguments);\n}\n\nfunction enumBooleanMember(id) {\n  return _builder.default.apply(\"EnumBooleanMember\", arguments);\n}\n\nfunction enumNumberMember(id, init) {\n  return _builder.default.apply(\"EnumNumberMember\", arguments);\n}\n\nfunction enumStringMember(id, init) {\n  return _builder.default.apply(\"EnumStringMember\", arguments);\n}\n\nfunction enumDefaultedMember(id) {\n  return _builder.default.apply(\"EnumDefaultedMember\", arguments);\n}\n\nfunction indexedAccessType(objectType, indexType) {\n  return _builder.default.apply(\"IndexedAccessType\", arguments);\n}\n\nfunction optionalIndexedAccessType(objectType, indexType) {\n  return _builder.default.apply(\"OptionalIndexedAccessType\", arguments);\n}\n\nfunction jsxAttribute(name, value) {\n  return _builder.default.apply(\"JSXAttribute\", arguments);\n}\n\nfunction jsxClosingElement(name) {\n  return _builder.default.apply(\"JSXClosingElement\", arguments);\n}\n\nfunction jsxElement(openingElement, closingElement, children, selfClosing) {\n  return _builder.default.apply(\"JSXElement\", arguments);\n}\n\nfunction jsxEmptyExpression() {\n  return _builder.default.apply(\"JSXEmptyExpression\", arguments);\n}\n\nfunction jsxExpressionContainer(expression) {\n  return _builder.default.apply(\"JSXExpressionContainer\", arguments);\n}\n\nfunction jsxSpreadChild(expression) {\n  return _builder.default.apply(\"JSXSpreadChild\", arguments);\n}\n\nfunction jsxIdentifier(name) {\n  return _builder.default.apply(\"JSXIdentifier\", arguments);\n}\n\nfunction jsxMemberExpression(object, property) {\n  return _builder.default.apply(\"JSXMemberExpression\", arguments);\n}\n\nfunction jsxNamespacedName(namespace, name) {\n  return _builder.default.apply(\"JSXNamespacedName\", arguments);\n}\n\nfunction jsxOpeningElement(name, attributes, selfClosing) {\n  return _builder.default.apply(\"JSXOpeningElement\", arguments);\n}\n\nfunction jsxSpreadAttribute(argument) {\n  return _builder.default.apply(\"JSXSpreadAttribute\", arguments);\n}\n\nfunction jsxText(value) {\n  return _builder.default.apply(\"JSXText\", arguments);\n}\n\nfunction jsxFragment(openingFragment, closingFragment, children) {\n  return _builder.default.apply(\"JSXFragment\", arguments);\n}\n\nfunction jsxOpeningFragment() {\n  return _builder.default.apply(\"JSXOpeningFragment\", arguments);\n}\n\nfunction jsxClosingFragment() {\n  return _builder.default.apply(\"JSXClosingFragment\", arguments);\n}\n\nfunction noop() {\n  return _builder.default.apply(\"Noop\", arguments);\n}\n\nfunction placeholder(expectedNode, name) {\n  return _builder.default.apply(\"Placeholder\", arguments);\n}\n\nfunction v8IntrinsicIdentifier(name) {\n  return _builder.default.apply(\"V8IntrinsicIdentifier\", arguments);\n}\n\nfunction argumentPlaceholder() {\n  return _builder.default.apply(\"ArgumentPlaceholder\", arguments);\n}\n\nfunction bindExpression(object, callee) {\n  return _builder.default.apply(\"BindExpression\", arguments);\n}\n\nfunction importAttribute(key, value) {\n  return _builder.default.apply(\"ImportAttribute\", arguments);\n}\n\nfunction decorator(expression) {\n  return _builder.default.apply(\"Decorator\", arguments);\n}\n\nfunction doExpression(body, async) {\n  return _builder.default.apply(\"DoExpression\", arguments);\n}\n\nfunction exportDefaultSpecifier(exported) {\n  return _builder.default.apply(\"ExportDefaultSpecifier\", arguments);\n}\n\nfunction recordExpression(properties) {\n  return _builder.default.apply(\"RecordExpression\", arguments);\n}\n\nfunction tupleExpression(elements) {\n  return _builder.default.apply(\"TupleExpression\", arguments);\n}\n\nfunction decimalLiteral(value) {\n  return _builder.default.apply(\"DecimalLiteral\", arguments);\n}\n\nfunction moduleExpression(body) {\n  return _builder.default.apply(\"ModuleExpression\", arguments);\n}\n\nfunction topicReference() {\n  return _builder.default.apply(\"TopicReference\", arguments);\n}\n\nfunction pipelineTopicExpression(expression) {\n  return _builder.default.apply(\"PipelineTopicExpression\", arguments);\n}\n\nfunction pipelineBareFunction(callee) {\n  return _builder.default.apply(\"PipelineBareFunction\", arguments);\n}\n\nfunction pipelinePrimaryTopicReference() {\n  return _builder.default.apply(\"PipelinePrimaryTopicReference\", arguments);\n}\n\nfunction tsParameterProperty(parameter) {\n  return _builder.default.apply(\"TSParameterProperty\", arguments);\n}\n\nfunction tsDeclareFunction(id, typeParameters, params, returnType) {\n  return _builder.default.apply(\"TSDeclareFunction\", arguments);\n}\n\nfunction tsDeclareMethod(decorators, key, typeParameters, params, returnType) {\n  return _builder.default.apply(\"TSDeclareMethod\", arguments);\n}\n\nfunction tsQualifiedName(left, right) {\n  return _builder.default.apply(\"TSQualifiedName\", arguments);\n}\n\nfunction tsCallSignatureDeclaration(typeParameters, parameters, typeAnnotation) {\n  return _builder.default.apply(\"TSCallSignatureDeclaration\", arguments);\n}\n\nfunction tsConstructSignatureDeclaration(typeParameters, parameters, typeAnnotation) {\n  return _builder.default.apply(\"TSConstructSignatureDeclaration\", arguments);\n}\n\nfunction tsPropertySignature(key, typeAnnotation, initializer) {\n  return _builder.default.apply(\"TSPropertySignature\", arguments);\n}\n\nfunction tsMethodSignature(key, typeParameters, parameters, typeAnnotation) {\n  return _builder.default.apply(\"TSMethodSignature\", arguments);\n}\n\nfunction tsIndexSignature(parameters, typeAnnotation) {\n  return _builder.default.apply(\"TSIndexSignature\", arguments);\n}\n\nfunction tsAnyKeyword() {\n  return _builder.default.apply(\"TSAnyKeyword\", arguments);\n}\n\nfunction tsBooleanKeyword() {\n  return _builder.default.apply(\"TSBooleanKeyword\", arguments);\n}\n\nfunction tsBigIntKeyword() {\n  return _builder.default.apply(\"TSBigIntKeyword\", arguments);\n}\n\nfunction tsIntrinsicKeyword() {\n  return _builder.default.apply(\"TSIntrinsicKeyword\", arguments);\n}\n\nfunction tsNeverKeyword() {\n  return _builder.default.apply(\"TSNeverKeyword\", arguments);\n}\n\nfunction tsNullKeyword() {\n  return _builder.default.apply(\"TSNullKeyword\", arguments);\n}\n\nfunction tsNumberKeyword() {\n  return _builder.default.apply(\"TSNumberKeyword\", arguments);\n}\n\nfunction tsObjectKeyword() {\n  return _builder.default.apply(\"TSObjectKeyword\", arguments);\n}\n\nfunction tsStringKeyword() {\n  return _builder.default.apply(\"TSStringKeyword\", arguments);\n}\n\nfunction tsSymbolKeyword() {\n  return _builder.default.apply(\"TSSymbolKeyword\", arguments);\n}\n\nfunction tsUndefinedKeyword() {\n  return _builder.default.apply(\"TSUndefinedKeyword\", arguments);\n}\n\nfunction tsUnknownKeyword() {\n  return _builder.default.apply(\"TSUnknownKeyword\", arguments);\n}\n\nfunction tsVoidKeyword() {\n  return _builder.default.apply(\"TSVoidKeyword\", arguments);\n}\n\nfunction tsThisType() {\n  return _builder.default.apply(\"TSThisType\", arguments);\n}\n\nfunction tsFunctionType(typeParameters, parameters, typeAnnotation) {\n  return _builder.default.apply(\"TSFunctionType\", arguments);\n}\n\nfunction tsConstructorType(typeParameters, parameters, typeAnnotation) {\n  return _builder.default.apply(\"TSConstructorType\", arguments);\n}\n\nfunction tsTypeReference(typeName, typeParameters) {\n  return _builder.default.apply(\"TSTypeReference\", arguments);\n}\n\nfunction tsTypePredicate(parameterName, typeAnnotation, asserts) {\n  return _builder.default.apply(\"TSTypePredicate\", arguments);\n}\n\nfunction tsTypeQuery(exprName) {\n  return _builder.default.apply(\"TSTypeQuery\", arguments);\n}\n\nfunction tsTypeLiteral(members) {\n  return _builder.default.apply(\"TSTypeLiteral\", arguments);\n}\n\nfunction tsArrayType(elementType) {\n  return _builder.default.apply(\"TSArrayType\", arguments);\n}\n\nfunction tsTupleType(elementTypes) {\n  return _builder.default.apply(\"TSTupleType\", arguments);\n}\n\nfunction tsOptionalType(typeAnnotation) {\n  return _builder.default.apply(\"TSOptionalType\", arguments);\n}\n\nfunction tsRestType(typeAnnotation) {\n  return _builder.default.apply(\"TSRestType\", arguments);\n}\n\nfunction tsNamedTupleMember(label, elementType, optional) {\n  return _builder.default.apply(\"TSNamedTupleMember\", arguments);\n}\n\nfunction tsUnionType(types) {\n  return _builder.default.apply(\"TSUnionType\", arguments);\n}\n\nfunction tsIntersectionType(types) {\n  return _builder.default.apply(\"TSIntersectionType\", arguments);\n}\n\nfunction tsConditionalType(checkType, extendsType, trueType, falseType) {\n  return _builder.default.apply(\"TSConditionalType\", arguments);\n}\n\nfunction tsInferType(typeParameter) {\n  return _builder.default.apply(\"TSInferType\", arguments);\n}\n\nfunction tsParenthesizedType(typeAnnotation) {\n  return _builder.default.apply(\"TSParenthesizedType\", arguments);\n}\n\nfunction tsTypeOperator(typeAnnotation) {\n  return _builder.default.apply(\"TSTypeOperator\", arguments);\n}\n\nfunction tsIndexedAccessType(objectType, indexType) {\n  return _builder.default.apply(\"TSIndexedAccessType\", arguments);\n}\n\nfunction tsMappedType(typeParameter, typeAnnotation, nameType) {\n  return _builder.default.apply(\"TSMappedType\", arguments);\n}\n\nfunction tsLiteralType(literal) {\n  return _builder.default.apply(\"TSLiteralType\", arguments);\n}\n\nfunction tsExpressionWithTypeArguments(expression, typeParameters) {\n  return _builder.default.apply(\"TSExpressionWithTypeArguments\", arguments);\n}\n\nfunction tsInterfaceDeclaration(id, typeParameters, _extends, body) {\n  return _builder.default.apply(\"TSInterfaceDeclaration\", arguments);\n}\n\nfunction tsInterfaceBody(body) {\n  return _builder.default.apply(\"TSInterfaceBody\", arguments);\n}\n\nfunction tsTypeAliasDeclaration(id, typeParameters, typeAnnotation) {\n  return _builder.default.apply(\"TSTypeAliasDeclaration\", arguments);\n}\n\nfunction tsAsExpression(expression, typeAnnotation) {\n  return _builder.default.apply(\"TSAsExpression\", arguments);\n}\n\nfunction tsTypeAssertion(typeAnnotation, expression) {\n  return _builder.default.apply(\"TSTypeAssertion\", arguments);\n}\n\nfunction tsEnumDeclaration(id, members) {\n  return _builder.default.apply(\"TSEnumDeclaration\", arguments);\n}\n\nfunction tsEnumMember(id, initializer) {\n  return _builder.default.apply(\"TSEnumMember\", arguments);\n}\n\nfunction tsModuleDeclaration(id, body) {\n  return _builder.default.apply(\"TSModuleDeclaration\", arguments);\n}\n\nfunction tsModuleBlock(body) {\n  return _builder.default.apply(\"TSModuleBlock\", arguments);\n}\n\nfunction tsImportType(argument, qualifier, typeParameters) {\n  return _builder.default.apply(\"TSImportType\", arguments);\n}\n\nfunction tsImportEqualsDeclaration(id, moduleReference) {\n  return _builder.default.apply(\"TSImportEqualsDeclaration\", arguments);\n}\n\nfunction tsExternalModuleReference(expression) {\n  return _builder.default.apply(\"TSExternalModuleReference\", arguments);\n}\n\nfunction tsNonNullExpression(expression) {\n  return _builder.default.apply(\"TSNonNullExpression\", arguments);\n}\n\nfunction tsExportAssignment(expression) {\n  return _builder.default.apply(\"TSExportAssignment\", arguments);\n}\n\nfunction tsNamespaceExportDeclaration(id) {\n  return _builder.default.apply(\"TSNamespaceExportDeclaration\", arguments);\n}\n\nfunction tsTypeAnnotation(typeAnnotation) {\n  return _builder.default.apply(\"TSTypeAnnotation\", arguments);\n}\n\nfunction tsTypeParameterInstantiation(params) {\n  return _builder.default.apply(\"TSTypeParameterInstantiation\", arguments);\n}\n\nfunction tsTypeParameterDeclaration(params) {\n  return _builder.default.apply(\"TSTypeParameterDeclaration\", arguments);\n}\n\nfunction tsTypeParameter(constraint, _default, name) {\n  return _builder.default.apply(\"TSTypeParameter\", arguments);\n}\n\nfunction NumberLiteral(value) {\n  console.trace(\"The node type NumberLiteral has been renamed to NumericLiteral\");\n  return _builder.default.apply(\"NumberLiteral\", arguments);\n}\n\nfunction RegexLiteral(pattern, flags) {\n  console.trace(\"The node type RegexLiteral has been renamed to RegExpLiteral\");\n  return _builder.default.apply(\"RegexLiteral\", arguments);\n}\n\nfunction RestProperty(argument) {\n  console.trace(\"The node type RestProperty has been renamed to RestElement\");\n  return _builder.default.apply(\"RestProperty\", arguments);\n}\n\nfunction SpreadProperty(argument) {\n  console.trace(\"The node type SpreadProperty has been renamed to SpreadElement\");\n  return _builder.default.apply(\"SpreadProperty\", arguments);\n}"]},"metadata":{},"sourceType":"script"}