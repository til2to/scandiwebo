{"ast":null,"code":"import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { gql } from 'graphql-tag';\nimport { Query } from 'react-apollo';\nimport Product from './Product';\nimport styled from 'styled-components'; // const CATEGORIES_QUERY = gql`\n//     query CategoriesQuery($id: String!){ \n//         product(id: $id){\n//             inStock\n//             id\n//             description\n//             name\n//             gallery\n//             }\n//         }\n// `\n\nconst CATEGORIES_QUERY = gql`\n    query CategoriesQuery{ \n        categories{\n          name\n          products{\n            id\n            name\n            gallery\n            description\n            inStock\n\n          }\n          \n        }\n    }\n`;\nexport class Products extends Component {\n  render() {// return (\n    //   <Fragment>\n    //     <Query query={CATEGORIES_QUERY} >\n    //       {\n    //         ({data, loading, error}) =>{\n    //           if(loading) return <h4>Loading</h4>\n    //           if(error) console.log(error.message)\n    //           return <Fragment>\n    //             {\n    //             data.categories.map(cat=>(\n    //               <Product key={cat.name} cat={cat}/>\n    //             ))\n    //             }\n    //           </Fragment>\n    //         }\n    //       }\n    //     </Query>\n    //   </Fragment>\n    // )\n  }\n\n}\nProducts.propTypes = {};\nexport default Products;","map":{"version":3,"sources":["/Volumes/Nana/I_T/projects_code/react/scandiweb_task/src/components/Products.js"],"names":["React","Component","Fragment","PropTypes","gql","Query","Product","styled","CATEGORIES_QUERY","Products","render","propTypes"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,GAAT,QAAoB,aAApB;AACA,SAASC,KAAT,QAAsB,cAAtB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,MAAP,MAAmB,mBAAnB,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,gBAAgB,GAAGJ,GAAI;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAfA;AAiBA,OAAO,MAAMK,QAAN,SAAuBR,SAAvB,CAAiC;AAKtCS,EAAAA,MAAM,GAAG,CAEP;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACD;;AA5BqC;AAA3BD,Q,CACJE,S,GAAY,E;AA+BrB,eAAeF,QAAf","sourcesContent":["import React, { Component, Fragment } from 'react'\nimport PropTypes from 'prop-types'\nimport { gql } from 'graphql-tag'\nimport { Query } from 'react-apollo'\nimport Product from './Product';\nimport styled from 'styled-components'\n\n// const CATEGORIES_QUERY = gql`\n//     query CategoriesQuery($id: String!){ \n//         product(id: $id){\n//             inStock\n//             id\n//             description\n//             name\n//             gallery\n//             }\n//         }\n// `\n\nconst CATEGORIES_QUERY = gql`\n    query CategoriesQuery{ \n        categories{\n          name\n          products{\n            id\n            name\n            gallery\n            description\n            inStock\n\n          }\n          \n        }\n    }\n`\n\nexport class Products extends Component {\n  static propTypes = {\n\n  }\n\n  render() {\n    \n    // return (\n    //   <Fragment>\n    //     <Query query={CATEGORIES_QUERY} >\n    //       {\n    //         ({data, loading, error}) =>{\n    //           if(loading) return <h4>Loading</h4>\n    //           if(error) console.log(error.message)\n              \n    //           return <Fragment>\n    //             {\n    //             data.categories.map(cat=>(\n    //               <Product key={cat.name} cat={cat}/>\n    //             ))\n    //             }\n    //           </Fragment>\n\n    //         }\n    //       }\n    //     </Query>\n    //   </Fragment>\n    // )\n  }\n}\n\n\nexport default Products\n"]},"metadata":{},"sourceType":"module"}