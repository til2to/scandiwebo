{"ast":null,"code":"var _jsxFileName = \"/Volumes/Nana/I_T/projects_code/react/scandiweb_task/src/components/Products.js\";\nimport React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { gql } from 'graphql-tag';\nimport { Query } from 'react-apollo';\nimport Product from './Product';\nimport styled from 'styled-components'; // const CATEGORIES_QUERY = gql`\n//     query CategoriesQuery($id: String!){ \n//         product(id: $id){\n//             inStock\n//             id\n//             description\n//             name\n//             gallery\n//             }\n//         }\n// `\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CATEGORIES_QUERY = gql`\n    query CategoriesQuery{ \n        categories{\n          products{\n            id\n            name\n            gallery\n            description\n            \n          }\n          inStock\n          id\n          description\n          name\n          gallery\n            }\n        }\n`;\nexport class Products extends Component {\n  render() {\n    let {\n      id\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Query, {\n        query: CATEGORIES_QUERY,\n        variables: {\n          id: \"huarache-x-stussy-le\"\n        },\n        children: _ref => {\n          let {\n            data,\n            loading,\n            error\n          } = _ref;\n          if (loading) return /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Loading\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 34\n          }, this);\n          if (error) console.log(error.message);\n          const {\n            description,\n            gallery\n          } = data.product;\n          console.log(data);\n          return /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Successful \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 22\n          }, this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this);\n  }\n\n}\nProducts.propTypes = {};\nexport default Products;","map":{"version":3,"sources":["/Volumes/Nana/I_T/projects_code/react/scandiweb_task/src/components/Products.js"],"names":["React","Component","Fragment","PropTypes","gql","Query","Product","styled","CATEGORIES_QUERY","Products","render","id","props","data","loading","error","console","log","message","description","gallery","product","propTypes"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,GAAT,QAAoB,aAApB;AACA,SAASC,KAAT,QAAsB,cAAtB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,MAAP,MAAmB,mBAAnB,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,MAAMC,gBAAgB,GAAGJ,GAAI;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAjBA;AAmBA,OAAO,MAAMK,QAAN,SAAuBR,SAAvB,CAAiC;AAKtCS,EAAAA,MAAM,GAAG;AACP,QAAI;AAAEC,MAAAA;AAAF,QAAS,KAAKC,KAAlB;AACA,wBACE,QAAC,QAAD;AAAA,6BACE,QAAC,KAAD;AAAO,QAAA,KAAK,EAAEJ,gBAAd;AAAgC,QAAA,SAAS,EAAE;AAACG,UAAAA,EAAE,EAAE;AAAL,SAA3C;AAAA,kBAEI,QAA2B;AAAA,cAA1B;AAACE,YAAAA,IAAD;AAAOC,YAAAA,OAAP;AAAgBC,YAAAA;AAAhB,WAA0B;AACzB,cAAGD,OAAH,EAAY,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP;AACZ,cAAGC,KAAH,EAAUC,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,OAAlB;AAEV,gBAAM;AAAEC,YAAAA,WAAF;AAAeC,YAAAA;AAAf,cAA2BP,IAAI,CAACQ,OAAtC;AACAL,UAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAZ;AAEA,8BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP;AACD;AAVL;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAiBD;;AAxBqC;AAA3BJ,Q,CACJa,S,GAAY,E;AA0BrB,eAAeb,QAAf","sourcesContent":["import React, { Component, Fragment } from 'react'\nimport PropTypes from 'prop-types'\nimport { gql } from 'graphql-tag'\nimport { Query } from 'react-apollo'\nimport Product from './Product';\nimport styled from 'styled-components'\n\n// const CATEGORIES_QUERY = gql`\n//     query CategoriesQuery($id: String!){ \n//         product(id: $id){\n//             inStock\n//             id\n//             description\n//             name\n//             gallery\n//             }\n//         }\n// `\n\nconst CATEGORIES_QUERY = gql`\n    query CategoriesQuery{ \n        categories{\n          products{\n            id\n            name\n            gallery\n            description\n            \n          }\n          inStock\n          id\n          description\n          name\n          gallery\n            }\n        }\n`\n\nexport class Products extends Component {\n  static propTypes = {\n\n  }\n\n  render() {\n    let { id } = this.props\n    return (\n      <Fragment>\n        <Query query={CATEGORIES_QUERY} variables={{id: \"huarache-x-stussy-le\"}}>\n          {\n            ({data, loading, error}) =>{\n              if(loading) return <h4>Loading</h4>\n              if(error) console.log(error.message)\n              \n              const { description, gallery } = data.product\n              console.log(data)\n\n              return <h4>Successful </h4>;\n            }\n          }\n        </Query>\n      </Fragment>\n    )\n  }\n}\n\nexport default Products\n"]},"metadata":{},"sourceType":"module"}