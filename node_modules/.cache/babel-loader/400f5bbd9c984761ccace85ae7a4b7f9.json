{"ast":null,"code":"var _jsxFileName = \"/Volumes/Nana/I_T/projects_code/react/scandiweb_task/src/components/Products.js\";\nimport React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { compose, graphql } from 'react-apollo';\nimport { Query } from 'react-apollo';\nimport { gql } from 'graphql-tag';\nimport styled from 'styled-components';\nimport ProductItem from './ProductItem';\nimport ProductPage from '../Pages/ProductPage';\nimport { GET_CATEGORIES } from './Data';\nimport { Link } from 'react-router-dom';\nimport Categories from './Categories';\nimport { Navbar } from './Navbar';\nimport { CategoryItem } from './CategoryItem';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PRODUCT_QUERY = gql`\n    query productQuery($title: String!){ \n        category(input: {title: $title}){\n          name\n          products{\n            inStock\n            name\n            id\n            brand\n            description\n            gallery\n\n            attributes{\n              id\n              type\n              name\n              \n              items{\n                id\n                value\n                displayValue\n              }\n            }\n\n            prices{\n              amount\n              currency{\n                label\n                symbol\n              }\n            }\n          }\n      }\n    }\n`;\nexport class Products extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {};\n  }\n\n  // changeOrder = (title) => {\n  //   // const { allItemQuery } = this.props\n  //   const { category } = this.props\n  //   const result = category({ variables: { title: 'clothes' } })\n  //   //Set state or store filter data\n  //   this.setState({clothes_data: result})\n  // };\n  // componentDidMount(){\n  //   this.props.category({\n  //     variables: {\n  //       name: this.props.match.params\n  //     }\n  //   })\n  // }\n  render() {\n    let {\n      name\n    } = this.props.match.params;\n    console.log(name);\n    return /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(Categories, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Query, {\n        query: PRODUCT_QUERY,\n        variables: {\n          title: name\n        },\n        children: _ref => {\n          let {\n            data,\n            loading,\n            error\n          } = _ref;\n          if (loading) return /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \" Loading.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 35\n          }, this);\n          if (error) console.log(error.message); // console.log(data.category)\n          // const catego = data.category\n          // const filterClothes = (title) => {\n          //   // const { allItemQuery } = this.props\n          //   // const { category } = this.props\n          //   const result = data.category({ variables: { title: 'clothes' } })\n          //   //Set state or store filter data\n          //   this.setState({clothes_data: result})\n          // };\n          // const filterClothes = (cat) => {\n          //   const results = data.categories.filter((catIte) => {\n          //     return catIte.name === cat ? console.log(catIte.name) : 'No'\n          //   })\n          //   this.setState({clothes_data: results})\n          // }\n\n          return /*#__PURE__*/_jsxDEV(Wrap, {\n            children: data.category.products.map(prod => /*#__PURE__*/_jsxDEV(ProductItem, {\n              prod: prod\n            }, prod.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 22\n          }, this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this);\n  }\n\n}\nexport default Products;\nconst Container = styled.div`\n  padding: 10px;\n`;\n_c = Container;\nconst Wrap = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  margin-left: 20px;\n`; // send the category name to top left of the container\n// const CatContainer = styled.div`\n//   height: 50px;\n//   padding: 20px;\n// `\n// const CatWrap = styled.div`\n//   font-size: 30px;\n//   font-weight: 100;\n// `\n\n_c2 = Wrap;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"Wrap\");","map":{"version":3,"sources":["/Volumes/Nana/I_T/projects_code/react/scandiweb_task/src/components/Products.js"],"names":["React","Component","Fragment","PropTypes","compose","graphql","Query","gql","styled","ProductItem","ProductPage","GET_CATEGORIES","Link","Categories","Navbar","CategoryItem","PRODUCT_QUERY","Products","state","render","name","props","match","params","console","log","title","data","loading","error","message","category","products","map","prod","id","Container","div","Wrap"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,EAAkBC,OAAlB,QAAiC,cAAjC;AACA,SAASC,KAAT,QAAsB,cAAtB;AACA,SAASC,GAAT,QAAoB,aAApB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,WAAP,MAAwB,sBAAxB;AACA,SAASC,cAAT,QAA+B,QAA/B;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,SAASC,MAAT,QAAuB,UAAvB;AACA,SAASC,YAAT,QAA6B,gBAA7B;;AAGA,MAAMC,aAAa,GAAGT,GAAI;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAlCA;AAoCA,OAAO,MAAMU,QAAN,SAAuBhB,SAAvB,CAAiC;AAAA;AAAA;AAAA,SACtCiB,KADsC,GAC9B,EAD8B;AAAA;;AAItC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEAC,EAAAA,MAAM,GAAG;AACP,QAAI;AAAEC,MAAAA;AAAF,QAAW,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,MAAhC;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYL,IAAZ;AACA,wBACE,QAAC,SAAD;AAAA,8BAEE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,cAFF,eAME,QAAC,KAAD;AAAO,QAAA,KAAK,EAAEJ,aAAd;AAA6B,QAAA,SAAS,EAAE;AAAEU,UAAAA,KAAK,EAAEN;AAAT,SAAxC;AAAA,kBAEI,QAA8B;AAAA,cAA7B;AAAEO,YAAAA,IAAF;AAAQC,YAAAA,OAAR;AAAiBC,YAAAA;AAAjB,WAA6B;AAC5B,cAAID,OAAJ,EAAa,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP;AACb,cAAIC,KAAJ,EAAWL,OAAO,CAACC,GAAR,CAAYI,KAAK,CAACC,OAAlB,EAFiB,CAG5B;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;AACA,8BAAO,QAAC,IAAD;AAAA,sBAEHH,IAAI,CAACI,QAAL,CAAcC,QAAd,CAAuBC,GAAvB,CAA2BC,IAAI,iBAC7B,QAAC,WAAD;AAA2B,cAAA,IAAI,EAAEA;AAAjC,eAAkBA,IAAI,CAACC,EAAvB;AAAA;AAAA;AAAA;AAAA,oBADF;AAFG;AAAA;AAAA;AAAA;AAAA,kBAAP;AAOD;AA7BL;AAAA;AAAA;AAAA;AAAA,cANF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAyCD;;AA/DqC;AAkExC,eAAelB,QAAf;AAEA,MAAMmB,SAAS,GAAG5B,MAAM,CAAC6B,GAAI;AAC7B;AACA,CAFA;KAAMD,S;AAGN,MAAME,IAAI,GAAG9B,MAAM,CAAC6B,GAAI;AACxB;AACA;AACA;AACA,CAJA,C,CAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;MAbMC,I","sourcesContent":["import React, { Component, Fragment } from 'react'\nimport PropTypes from 'prop-types'\nimport { compose, graphql } from 'react-apollo'\nimport { Query } from 'react-apollo'\nimport { gql } from 'graphql-tag'\nimport styled from 'styled-components'\nimport ProductItem from './ProductItem'\nimport ProductPage from '../Pages/ProductPage'\nimport { GET_CATEGORIES } from './Data'\nimport { Link } from 'react-router-dom'\nimport Categories from './Categories';\nimport { Navbar } from './Navbar';\nimport { CategoryItem } from './CategoryItem';\n\n\nconst PRODUCT_QUERY = gql`\n    query productQuery($title: String!){ \n        category(input: {title: $title}){\n          name\n          products{\n            inStock\n            name\n            id\n            brand\n            description\n            gallery\n\n            attributes{\n              id\n              type\n              name\n              \n              items{\n                id\n                value\n                displayValue\n              }\n            }\n\n            prices{\n              amount\n              currency{\n                label\n                symbol\n              }\n            }\n          }\n      }\n    }\n`\n\nexport class Products extends Component {\n  state = {\n\n  }\n  // changeOrder = (title) => {\n  //   // const { allItemQuery } = this.props\n  //   const { category } = this.props\n  //   const result = category({ variables: { title: 'clothes' } })\n  //   //Set state or store filter data\n  //   this.setState({clothes_data: result})\n  // };\n  // componentDidMount(){\n  //   this.props.category({\n  //     variables: {\n  //       name: this.props.match.params\n  //     }\n  //   })\n  // }\n\n  render() {\n    let { name } = this.props.match.params\n    console.log(name)\n    return (\n      <Container>\n        \n        <Categories />\n        {/* Category {name} */}\n\n        {/* <Button onClick={()=>{this.changeOrder(\"clothes\")}}>Newest</Button> */}\n        <Query query={PRODUCT_QUERY} variables={{ title: name }}>\n          {\n            ({ data, loading, error }) => {\n              if (loading) return <h4> Loading.</h4>\n              if (error) console.log(error.message)\n              // console.log(data.category)\n              // const catego = data.category\n\n              // const filterClothes = (title) => {\n              //   // const { allItemQuery } = this.props\n              //   // const { category } = this.props\n              //   const result = data.category({ variables: { title: 'clothes' } })\n              //   //Set state or store filter data\n              //   this.setState({clothes_data: result})\n              // };\n\n              // const filterClothes = (cat) => {\n              //   const results = data.categories.filter((catIte) => {\n              //     return catIte.name === cat ? console.log(catIte.name) : 'No'\n              //   })\n              //   this.setState({clothes_data: results})\n              // }\n              return <Wrap>\n                {\n                  data.category.products.map(prod => (\n                    <ProductItem key={prod.id} prod={prod} />\n                  ))\n                }\n              </Wrap>\n            }\n          }\n        </Query>\n      </Container>\n    )\n  }\n}\n\nexport default Products\n\nconst Container = styled.div`\n  padding: 10px;\n`\nconst Wrap = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  margin-left: 20px;\n`\n// send the category name to top left of the container\n// const CatContainer = styled.div`\n//   height: 50px;\n//   padding: 20px;\n// `\n// const CatWrap = styled.div`\n//   font-size: 30px;\n//   font-weight: 100;\n// `"]},"metadata":{},"sourceType":"module"}