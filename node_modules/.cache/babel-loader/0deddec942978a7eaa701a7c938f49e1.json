{"ast":null,"code":"var _jsxFileName = \"/Volumes/Nana/I_T/projects_code/react/scandiweb_task/src/components/Categories.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { CategoryItem } from './CategoryItem';\nimport { Query } from 'react-apollo';\nimport { gql } from 'graphql-tag';\nimport CategoryName from './CategoryName'; // const CATEGORIES_QUERY = gql`\n//     query categoriesQuery{ \n//         categories{\n//           name\n//           products{\n//             name\n//             brand\n//             id\n//             gallery\n//             description\n//             inStock\n//             category\n//           }\n//         }\n//     }\n// `\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CATEGORIES_QUERY = gql`\n    query productQuery($title: String){ \n        category(input: {title: $title}){\n          name\n          products{\n            inStock\n            name\n            id\n            brand\n            description\n            gallery\n          }\n      }\n    }\n`;\n\nclass Categories extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      clothes_data: []\n    };\n\n    this.filterClothes = cat => {\n      e.preventDefault;\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => this.filterClothes('clothes'),\n        children: \"Clothes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Query, {\n        query: CATEGORIES_QUERY,\n        children: _ref => {\n          let {\n            data,\n            loading,\n            error\n          } = _ref;\n          if (loading) return /*#__PURE__*/_jsxDEV(\"h3\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 35\n          }, this);\n          if (error) console.log(error.message); // console.log(data)\n          // const { name } = data.category\n\n          return /*#__PURE__*/_jsxDEV(Wrap, {\n            children: data.categories.map(catItem => /*#__PURE__*/_jsxDEV(CategoryItem, {\n              catItem: catItem\n            }, catItem.name, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 27\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 22\n          }, this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nCategories.propTypes = {};\nexport default Categories;\nconst Container = styled.div`\n  // display: flex;\n`;\n_c = Container;\nconst Wrap = styled.div`\n   display: flex;\n   flex-direction: column;\n`;\n_c2 = Wrap;\nconst Button = styled.div`\n  font-weight: 600;\n  color: white;\n  background-color: #5ECE7B;\n  height: 40px;\n  width: 250px;\n  display: flex;\n  justify-content: center;\n  border-radius: 3px; \n  opacity: 0.85;\n  font-size: 13px;\n  cursor: pointer;\n  margin-top: 20px;\n  align-items: center;  \n  `;\n_c3 = Button;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"Wrap\");\n$RefreshReg$(_c3, \"Button\");","map":{"version":3,"sources":["/Volumes/Nana/I_T/projects_code/react/scandiweb_task/src/components/Categories.js"],"names":["React","Component","PropTypes","styled","CategoryItem","Query","gql","CategoryName","CATEGORIES_QUERY","Categories","state","clothes_data","filterClothes","cat","e","preventDefault","render","data","loading","error","console","log","message","categories","map","catItem","name","propTypes","Container","div","Wrap","Button"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,YAAT,QAA6B,gBAA7B;AACA,SAASC,KAAT,QAAsB,cAAtB;AACA,SAASC,GAAT,QAAoB,aAApB;AACA,OAAOC,YAAP,MAAyB,gBAAzB,C,CAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,MAAMC,gBAAgB,GAAGF,GAAI;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAdA;;AAgBA,MAAMG,UAAN,SAAyBR,SAAzB,CAAmC;AAAA;AAAA;AAAA,SAIjCS,KAJiC,GAI3B;AACJC,MAAAA,YAAY,EAAC;AADT,KAJ2B;;AAAA,SAQjCC,aARiC,GAQhBC,GAAD,IAAS;AACvBC,MAAAA,CAAC,CAACC,cAAF;AACD,KAVgC;AAAA;;AAYjCC,EAAAA,MAAM,GAAG;AAEP,wBACE,QAAC,SAAD;AAAA,8BACE,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAE,MAAI,KAAKJ,aAAL,CAAmB,SAAnB,CAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,KAAD;AAAO,QAAA,KAAK,EAAEJ,gBAAd;AAAA,kBAEI,QAA8B;AAAA,cAA7B;AAAES,YAAAA,IAAF;AAAQC,YAAAA,OAAR;AAAiBC,YAAAA;AAAjB,WAA6B;AAC5B,cAAID,OAAJ,EAAa,oBAAO;AAAA;AAAA;AAAA;AAAA,kBAAP;AACb,cAAIC,KAAJ,EAAWC,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,OAAlB,EAFiB,CAG5B;AAEA;;AACA,8BAAO,QAAC,IAAD;AAAA,sBAGGL,IAAI,CAACM,UAAL,CAAgBC,GAAhB,CAAoBC,OAAO,iBACzB,QAAC,YAAD;AAAiC,cAAA,OAAO,EAAEA;AAA1C,eAAmBA,OAAO,CAACC,IAA3B;AAAA;AAAA;AAAA;AAAA,oBADF;AAHH;AAAA;AAAA;AAAA;AAAA,kBAAP;AASD;AAjBL;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAyBD;;AAvCgC;;AAA7BjB,U,CACGkB,S,GAAY,E;AAyCrB,eAAelB,UAAf;AAEA,MAAMmB,SAAS,GAAGzB,MAAM,CAAC0B,GAAI;AAC7B;AACA,CAFA;KAAMD,S;AAGN,MAAME,IAAI,GAAG3B,MAAM,CAAC0B,GAAI;AACxB;AACA;AACA,CAHA;MAAMC,I;AAIN,MAAMC,MAAM,GAAG5B,MAAM,CAAC0B,GAAI;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAdA;MAAME,M","sourcesContent":["import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components'\nimport { CategoryItem } from './CategoryItem';\nimport { Query } from 'react-apollo'\nimport { gql } from 'graphql-tag'\nimport CategoryName from './CategoryName'\n\n\n// const CATEGORIES_QUERY = gql`\n//     query categoriesQuery{ \n//         categories{\n//           name\n//           products{\n//             name\n//             brand\n//             id\n//             gallery\n//             description\n//             inStock\n//             category\n//           }\n//         }\n//     }\n// `\n\nconst CATEGORIES_QUERY = gql`\n    query productQuery($title: String){ \n        category(input: {title: $title}){\n          name\n          products{\n            inStock\n            name\n            id\n            brand\n            description\n            gallery\n          }\n      }\n    }\n`\n\nclass Categories extends Component {\n  static propTypes = {\n\n  }\n  state={\n    clothes_data:[]\n  }\n\n  filterClothes = (cat) => {\n    e.preventDefault\n  }\n\n  render() {\n\n    return (\n      <Container>\n        <Button onClick={()=>this.filterClothes('clothes')}>Clothes</Button>\n        <Query query={CATEGORIES_QUERY}>\n          {\n            ({ data, loading, error }) => {\n              if (loading) return <h3></h3>\n              if (error) console.log(error.message)\n              // console.log(data)\n\n              // const { name } = data.category\n              return <Wrap>\n                      {/* <CategoryName name={name}/> */}                    \n                      {\n                        data.categories.map(catItem => (\n                          <CategoryItem key={catItem.name} catItem={catItem}/>\n                        ))\n                      }\n                      \n                    </Wrap>\n            }\n          }\n        </Query>\n      </Container>\n    )\n  }\n}\n\nexport default Categories\n\nconst Container = styled.div`\n  // display: flex;\n`\nconst Wrap = styled.div`\n   display: flex;\n   flex-direction: column;\n`\nconst Button = styled.div`\n  font-weight: 600;\n  color: white;\n  background-color: #5ECE7B;\n  height: 40px;\n  width: 250px;\n  display: flex;\n  justify-content: center;\n  border-radius: 3px; \n  opacity: 0.85;\n  font-size: 13px;\n  cursor: pointer;\n  margin-top: 20px;\n  align-items: center;  \n  `"]},"metadata":{},"sourceType":"module"}