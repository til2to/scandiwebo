{"ast":null,"code":"var _jsxFileName = \"/Volumes/Nana/I_T/projects_code/react/scandiweb_task/src/components/Launch.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Query } from 'react-apollo';\nimport { gql } from 'graphql-tag';\nimport { params } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PRODUCT_QUERY = gql`\n    query productQuery($title: String!){ \n        category(input: {title: $title}){\n          name\n          products{\n            inStock\n            name\n            id\n            brand\n            description\n            gallery\n          }\n      }\n    }\n`;\nexport class Launch extends Component {\n  render() {\n    let {\n      name\n    } = this.props.match.params; // console.log(title)\n\n    return /*#__PURE__*/_jsxDEV(Query, {\n      query: PRODUCT_QUERY,\n      variables: {\n        title: \"all\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Hello launch component\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), _ref => {\n        let {\n          loading,\n          data,\n          error\n        } = _ref;\n        if (loading) return;\n      }]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this) // <div>Hello launch component</div>\n    ;\n  }\n\n}\nLaunch.propTypes = {};\nexport default Launch;","map":{"version":3,"sources":["/Volumes/Nana/I_T/projects_code/react/scandiweb_task/src/components/Launch.js"],"names":["React","Component","PropTypes","Query","gql","params","PRODUCT_QUERY","Launch","render","name","props","match","title","loading","data","error","propTypes"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,KAAT,QAAsB,cAAtB;AACA,SAASC,GAAT,QAAoB,aAApB;AACA,SAASC,MAAT,QAAuB,kBAAvB;;AAEA,MAAMC,aAAa,GAAGF,GAAI;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAdA;AAgBA,OAAO,MAAMG,MAAN,SAAqBN,SAArB,CAA+B;AAKpCO,EAAAA,MAAM,GAAG;AACP,QAAI;AAAEC,MAAAA;AAAF,QAAW,KAAKC,KAAL,CAAWC,KAAX,CAAiBN,MAAhC,CADO,CAEP;;AACA,wBACE,QAAC,KAAD;AAAO,MAAA,KAAK,EAAEC,aAAd;AAA6B,MAAA,SAAS,EAAE;AAACM,QAAAA,KAAK,EAAE;AAAR,OAAxC;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAGI,QAA4B;AAAA,YAA3B;AAACC,UAAAA,OAAD;AAAUC,UAAAA,IAAV;AAAgBC,UAAAA;AAAhB,SAA2B;AAC1B,YAAGF,OAAH,EAAY;AACb,OALL;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,CAUE;AAVF;AAYD;;AApBmC;AAAzBN,M,CACJS,S,GAAY,E;AAsBrB,eAAeT,MAAf","sourcesContent":["import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { Query } from 'react-apollo'\nimport { gql } from 'graphql-tag'\nimport { params } from 'react-router-dom'\n\nconst PRODUCT_QUERY = gql`\n    query productQuery($title: String!){ \n        category(input: {title: $title}){\n          name\n          products{\n            inStock\n            name\n            id\n            brand\n            description\n            gallery\n          }\n      }\n    }\n`\n\nexport class Launch extends Component {\n  static propTypes = {\n\n  }\n\n  render() {\n    let { name } = this.props.match.params\n    // console.log(title)\n    return (\n      <Query query={PRODUCT_QUERY} variables={{title: \"all\"}}>\n        <h1>Hello launch component</h1>\n        {\n          ({loading, data, error}) => {\n            if(loading) return\n          }\n        }\n      </Query>\n\n      // <div>Hello launch component</div>\n    )\n  }\n}\n\nexport default Launch\n"]},"metadata":{},"sourceType":"module"}