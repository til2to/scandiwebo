{"ast":null,"code":"var _jsxFileName = \"/Volumes/Nana/I_T/projects_code/react/scandiweb_task/src/components/Categories.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { CategoryItem } from './CategoryItem';\nimport { Query } from 'react-apollo';\nimport { gql } from 'graphql-tag';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CATEGORIES_QUERY = gql`\n    query categoriesQuery{ \n        categories{\n          name\n          products{\n            id\n            name\n            brand\n            gallery\n            description\n            attributes{\n              name\n              id\n              type\n            }\n          }\n        }\n    }\n`;\n\nclass Categories extends Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(Query, {\n        query: CATEGORIES_QUERY,\n        children: _ref => {\n          let {\n            data,\n            loading,\n            error\n          } = _ref;\n          if (loading) return /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Loading\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 34\n          }, this);\n          if (error) console.log(error.message); // console.log(data)\n          // const { categories: name, products: {id, description, brand} } = data.categories;\n\n          return /*#__PURE__*/_jsxDEV(Wrap, {\n            children: data.categories.map(cat => /*#__PURE__*/_jsxDEV(CategoryItem, {\n              cat: cat\n            }, cat.name, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 22\n          }, this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nCategories.propTypes = {};\nexport default Categories;\nconst Container = styled.div`\n  \n`;\n_c = Container;\nconst Wrap = styled.div`\n\n`;\n_c2 = Wrap;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"Wrap\");","map":{"version":3,"sources":["/Volumes/Nana/I_T/projects_code/react/scandiweb_task/src/components/Categories.js"],"names":["React","Component","PropTypes","styled","CategoryItem","Query","gql","CATEGORIES_QUERY","Categories","render","data","loading","error","console","log","message","categories","map","cat","name","propTypes","Container","div","Wrap"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,YAAT,QAA6B,gBAA7B;AACA,SAASC,KAAT,QAAsB,cAAtB;AACA,SAASC,GAAT,QAAoB,aAApB;;AAGA,MAAMC,gBAAgB,GAAGD,GAAI;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAlBA;;AAoBA,MAAME,UAAN,SAAyBP,SAAzB,CAAmC;AAKjCQ,EAAAA,MAAM,GAAG;AACP,wBACE,QAAC,SAAD;AAAA,6BACE,QAAC,KAAD;AAAO,QAAA,KAAK,EAAEF,gBAAd;AAAA,kBAEI,QAA4B;AAAA,cAA3B;AAACG,YAAAA,IAAD;AAAOC,YAAAA,OAAP;AAAgBC,YAAAA;AAAhB,WAA2B;AAC1B,cAAGD,OAAH,EAAY,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP;AACZ,cAAGC,KAAH,EAAUC,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,OAAlB,EAFgB,CAI1B;AACA;;AAEA,8BAAO,QAAC,IAAD;AAAA,sBAELL,IAAI,CAACM,UAAL,CAAgBC,GAAhB,CAAoBC,GAAG,iBACrB,QAAC,YAAD;AAA6B,cAAA,GAAG,EAAEA;AAAlC,eAAmBA,GAAG,CAACC,IAAvB;AAAA;AAAA;AAAA;AAAA,oBADF;AAFK;AAAA;AAAA;AAAA;AAAA,kBAAP;AAiBD;AA1BL;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAiCD;;AAvCgC;;AAA7BX,U,CACGY,S,GAAY,E;AAyCrB,eAAeZ,UAAf;AAEA,MAAMa,SAAS,GAAGlB,MAAM,CAACmB,GAAI;AAC7B;AACA,CAFA;KAAMD,S;AAGN,MAAME,IAAI,GAAGpB,MAAM,CAACmB,GAAI;AACxB;AACA,CAFA;MAAMC,I","sourcesContent":["import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components'\nimport { CategoryItem } from './CategoryItem';\nimport { Query } from 'react-apollo'\nimport { gql } from 'graphql-tag'\n\n\nconst CATEGORIES_QUERY = gql`\n    query categoriesQuery{ \n        categories{\n          name\n          products{\n            id\n            name\n            brand\n            gallery\n            description\n            attributes{\n              name\n              id\n              type\n            }\n          }\n        }\n    }\n`\n\nclass Categories extends Component {\n  static propTypes = {\n\n  }\n\n  render() {\n    return (\n      <Container>\n        <Query query={CATEGORIES_QUERY} >\n          {\n            ({data, loading, error}) => {\n              if(loading) return <h3>Loading</h3>\n              if(error) console.log(error.message)\n              \n              // console.log(data)\n              // const { categories: name, products: {id, description, brand} } = data.categories;\n\n              return <Wrap>\n                {\n                data.categories.map(cat => (\n                  <CategoryItem key={cat.name} cat={cat}/>\n              ))\n                }\n              \n                {/* {\n                  data.products.map(prod=> (\n                    <CategoryItem key={prod.id} prod={prod}/>\n                  ))\n                } */}\n\n                {/* {\n                 console.log(data.categories[1].products[0].gallery)\n                } */}\n              </Wrap>\n            }\n          }\n        </Query>\n      </Container>\n    )\n  }\n}\n\nexport default Categories\n\nconst Container = styled.div`\n  \n`\nconst Wrap = styled.div`\n\n`"]},"metadata":{},"sourceType":"module"}